/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BTListResponseBTCategoryPropertyInfo,
} from '../models';
import {
    BTListResponseBTCategoryPropertyInfoFromJSON,
    BTListResponseBTCategoryPropertyInfoToJSON,
} from '../models';

export interface GetCategoryPropertiesRequest {
    ownerId?: string;
    ownerType?: number;
    documentId?: string;
    categoryIds?: Array<string>;
    objectType?: number;
    strict?: boolean;
    includeObjectTypeDefaults?: boolean;
    includeComputedProperties?: boolean;
    includePartPropertiesTableOnlyProperties?: boolean;
    onlyActive?: boolean;
    onlyObjectTypeDefaults?: boolean;
}

/**
 * 
 */
export class MetadataCategoryApi extends runtime.BaseAPI {

    /**
     * An object\'s category specifies its type: Part, Assembly, Drawing, etc. Available properties depend on the object\'s category.
     * Get properties associated with the specified metadata categories.
     */
    async getCategoryPropertiesRaw(requestParameters: GetCategoryPropertiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BTListResponseBTCategoryPropertyInfo>> {
        const queryParameters: any = {};

        if (requestParameters.ownerId !== undefined) {
            queryParameters['ownerId'] = requestParameters.ownerId;
        }

        if (requestParameters.ownerType !== undefined) {
            queryParameters['ownerType'] = requestParameters.ownerType;
        }

        if (requestParameters.documentId !== undefined) {
            queryParameters['documentId'] = requestParameters.documentId;
        }

        if (requestParameters.categoryIds) {
            queryParameters['categoryIds'] = requestParameters.categoryIds;
        }

        if (requestParameters.objectType !== undefined) {
            queryParameters['objectType'] = requestParameters.objectType;
        }

        if (requestParameters.strict !== undefined) {
            queryParameters['strict'] = requestParameters.strict;
        }

        if (requestParameters.includeObjectTypeDefaults !== undefined) {
            queryParameters['includeObjectTypeDefaults'] = requestParameters.includeObjectTypeDefaults;
        }

        if (requestParameters.includeComputedProperties !== undefined) {
            queryParameters['includeComputedProperties'] = requestParameters.includeComputedProperties;
        }

        if (requestParameters.includePartPropertiesTableOnlyProperties !== undefined) {
            queryParameters['includePartPropertiesTableOnlyProperties'] = requestParameters.includePartPropertiesTableOnlyProperties;
        }

        if (requestParameters.onlyActive !== undefined) {
            queryParameters['onlyActive'] = requestParameters.onlyActive;
        }

        if (requestParameters.onlyObjectTypeDefaults !== undefined) {
            queryParameters['onlyObjectTypeDefaults'] = requestParameters.onlyObjectTypeDefaults;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2", ["OAuth2Read"]);
        }

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/metadatacategory/categoryproperties`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BTListResponseBTCategoryPropertyInfoFromJSON(jsonValue));
    }

    /**
     * An object\'s category specifies its type: Part, Assembly, Drawing, etc. Available properties depend on the object\'s category.
     * Get properties associated with the specified metadata categories.
     */
    async getCategoryProperties(requestParameters: GetCategoryPropertiesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BTListResponseBTCategoryPropertyInfo> {
        const response = await this.getCategoryPropertiesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
