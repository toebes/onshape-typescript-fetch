/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTOwnerInfo } from './BTOwnerInfo';
import {
    BTOwnerInfoFromJSON,
    BTOwnerInfoFromJSONTyped,
    BTOwnerInfoToJSON,
} from './BTOwnerInfo';
import type { BTUserBasicSummaryInfo } from './BTUserBasicSummaryInfo';
import {
    BTUserBasicSummaryInfoFromJSON,
    BTUserBasicSummaryInfoFromJSONTyped,
    BTUserBasicSummaryInfoToJSON,
} from './BTUserBasicSummaryInfo';

/**
 * 
 * @export
 * @interface BTTaskTeamSummaryInfo
 */
export interface BTTaskTeamSummaryInfo {
    /**
     * 
     * @type {boolean}
     * @memberof BTTaskTeamSummaryInfo
     */
    acted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTTaskTeamSummaryInfo
     */
    active?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTTaskTeamSummaryInfo
     */
    canMove?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof BTTaskTeamSummaryInfo
     */
    createdAt?: Date;
    /**
     * 
     * @type {BTUserBasicSummaryInfo}
     * @memberof BTTaskTeamSummaryInfo
     */
    createdBy?: BTUserBasicSummaryInfo;
    /**
     * 
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    description?: string;
    /**
     * URI to fetch complete information of the resource.
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    href?: string;
    /**
     * Id of the resource.
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTTaskTeamSummaryInfo
     */
    isContainer?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTTaskTeamSummaryInfo
     */
    isEnterpriseOwned?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTTaskTeamSummaryInfo
     */
    isMutable?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof BTTaskTeamSummaryInfo
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {BTUserBasicSummaryInfo}
     * @memberof BTTaskTeamSummaryInfo
     */
    modifiedBy?: BTUserBasicSummaryInfo;
    /**
     * Name of the resource.
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    name?: string;
    /**
     * 
     * @type {BTOwnerInfo}
     * @memberof BTTaskTeamSummaryInfo
     */
    owner?: BTOwnerInfo;
    /**
     * 
     * @type {number}
     * @memberof BTTaskTeamSummaryInfo
     */
    predefinedTeam?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTTaskTeamSummaryInfo
     */
    predefinedTeamMutable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    projectId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    resourceType?: string;
    /**
     * 
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    treeHref?: string;
    /**
     * 
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    unparentHref?: string;
    /**
     * URI to visualize the resource in a webclient if applicable.
     * @type {string}
     * @memberof BTTaskTeamSummaryInfo
     */
    viewRef?: string;
}

/**
 * Check if a given object implements the BTTaskTeamSummaryInfo interface.
 */
export function instanceOfBTTaskTeamSummaryInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTTaskTeamSummaryInfoFromJSON(json: any): BTTaskTeamSummaryInfo {
    return BTTaskTeamSummaryInfoFromJSONTyped(json, false);
}

export function BTTaskTeamSummaryInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTTaskTeamSummaryInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'acted': !exists(json, 'acted') ? undefined : json['acted'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'canMove': !exists(json, 'canMove') ? undefined : json['canMove'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'createdBy': !exists(json, 'createdBy') ? undefined : BTUserBasicSummaryInfoFromJSON(json['createdBy']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'href': !exists(json, 'href') ? undefined : json['href'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isContainer': !exists(json, 'isContainer') ? undefined : json['isContainer'],
        'isEnterpriseOwned': !exists(json, 'isEnterpriseOwned') ? undefined : json['isEnterpriseOwned'],
        'isMutable': !exists(json, 'isMutable') ? undefined : json['isMutable'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
        'modifiedBy': !exists(json, 'modifiedBy') ? undefined : BTUserBasicSummaryInfoFromJSON(json['modifiedBy']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'owner': !exists(json, 'owner') ? undefined : BTOwnerInfoFromJSON(json['owner']),
        'predefinedTeam': !exists(json, 'predefinedTeam') ? undefined : json['predefinedTeam'],
        'predefinedTeamMutable': !exists(json, 'predefinedTeamMutable') ? undefined : json['predefinedTeamMutable'],
        'projectId': !exists(json, 'projectId') ? undefined : json['projectId'],
        'resourceType': !exists(json, 'resourceType') ? undefined : json['resourceType'],
        'treeHref': !exists(json, 'treeHref') ? undefined : json['treeHref'],
        'unparentHref': !exists(json, 'unparentHref') ? undefined : json['unparentHref'],
        'viewRef': !exists(json, 'viewRef') ? undefined : json['viewRef'],
    };
}

export function BTTaskTeamSummaryInfoToJSON(value?: BTTaskTeamSummaryInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'acted': value.acted,
        'active': value.active,
        'canMove': value.canMove,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'createdBy': BTUserBasicSummaryInfoToJSON(value.createdBy),
        'description': value.description,
        'href': value.href,
        'id': value.id,
        'isContainer': value.isContainer,
        'isEnterpriseOwned': value.isEnterpriseOwned,
        'isMutable': value.isMutable,
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
        'modifiedBy': BTUserBasicSummaryInfoToJSON(value.modifiedBy),
        'name': value.name,
        'owner': BTOwnerInfoToJSON(value.owner),
        'predefinedTeam': value.predefinedTeam,
        'predefinedTeamMutable': value.predefinedTeamMutable,
        'projectId': value.projectId,
        'resourceType': value.resourceType,
        'treeHref': value.treeHref,
        'unparentHref': value.unparentHref,
        'viewRef': value.viewRef,
    };
}

