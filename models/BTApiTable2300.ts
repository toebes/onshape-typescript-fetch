/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTApiTableColumn3141 } from './BTApiTableColumn3141';
import {
    BTApiTableColumn3141FromJSON,
    BTApiTableColumn3141FromJSONTyped,
    BTApiTableColumn3141ToJSON,
} from './BTApiTableColumn3141';
import type { BTApiTableRow2915 } from './BTApiTableRow2915';
import {
    BTApiTableRow2915FromJSON,
    BTApiTableRow2915FromJSONTyped,
    BTApiTableRow2915ToJSON,
} from './BTApiTableRow2915';

/**
 * 
 * @export
 * @interface BTApiTable2300
 */
export interface BTApiTable2300 {
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTApiTable2300
     */
    btType?: string;
    /**
     * 
     * @type {Array<BTApiTableColumn3141>}
     * @memberof BTApiTable2300
     */
    columns?: Array<BTApiTableColumn3141>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BTApiTable2300
     */
    entityIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof BTApiTable2300
     */
    id?: string;
    /**
     * 
     * @type {Array<BTApiTableRow2915>}
     * @memberof BTApiTable2300
     */
    rows?: Array<BTApiTableRow2915>;
    /**
     * 
     * @type {string}
     * @memberof BTApiTable2300
     */
    title?: string;
}

/**
 * Check if a given object implements the BTApiTable2300 interface.
 */
export function instanceOfBTApiTable2300(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTApiTable2300FromJSON(json: any): BTApiTable2300 {
    return BTApiTable2300FromJSONTyped(json, false);
}

export function BTApiTable2300FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTApiTable2300 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'columns': !exists(json, 'columns') ? undefined : ((json['columns'] as Array<any>).map(BTApiTableColumn3141FromJSON)),
        'entityIds': !exists(json, 'entityIds') ? undefined : json['entityIds'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'rows': !exists(json, 'rows') ? undefined : ((json['rows'] as Array<any>).map(BTApiTableRow2915FromJSON)),
        'title': !exists(json, 'title') ? undefined : json['title'],
    };
}

export function BTApiTable2300ToJSON(value?: BTApiTable2300 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'btType': value.btType,
        'columns': value.columns === undefined ? undefined : ((value.columns as Array<any>).map(BTApiTableColumn3141ToJSON)),
        'entityIds': value.entityIds,
        'id': value.id,
        'rows': value.rows === undefined ? undefined : ((value.rows as Array<any>).map(BTApiTableRow2915ToJSON)),
        'title': value.title,
    };
}

