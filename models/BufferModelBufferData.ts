/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BufferModelBufferData
 */
export interface BufferModelBufferData {
    /**
     * 
     * @type {number}
     * @memberof BufferModelBufferData
     */
    _short?: number;
    /**
     * 
     * @type {string}
     * @memberof BufferModelBufferData
     */
    _char?: string;
    /**
     * 
     * @type {number}
     * @memberof BufferModelBufferData
     */
    _int?: number;
    /**
     * 
     * @type {number}
     * @memberof BufferModelBufferData
     */
    _long?: number;
    /**
     * 
     * @type {number}
     * @memberof BufferModelBufferData
     */
    _float?: number;
    /**
     * 
     * @type {number}
     * @memberof BufferModelBufferData
     */
    _double?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BufferModelBufferData
     */
    direct?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BufferModelBufferData
     */
    readOnly?: boolean;
}

/**
 * Check if a given object implements the BufferModelBufferData interface.
 */
export function instanceOfBufferModelBufferData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BufferModelBufferDataFromJSON(json: any): BufferModelBufferData {
    return BufferModelBufferDataFromJSONTyped(json, false);
}

export function BufferModelBufferDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): BufferModelBufferData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_short': !exists(json, 'short') ? undefined : json['short'],
        '_char': !exists(json, 'char') ? undefined : json['char'],
        '_int': !exists(json, 'int') ? undefined : json['int'],
        '_long': !exists(json, 'long') ? undefined : json['long'],
        '_float': !exists(json, 'float') ? undefined : json['float'],
        '_double': !exists(json, 'double') ? undefined : json['double'],
        'direct': !exists(json, 'direct') ? undefined : json['direct'],
        'readOnly': !exists(json, 'readOnly') ? undefined : json['readOnly'],
    };
}

export function BufferModelBufferDataToJSON(value?: BufferModelBufferData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'short': value._short,
        'char': value._char,
        'int': value._int,
        'long': value._long,
        'float': value._float,
        'double': value._double,
        'direct': value.direct,
        'readOnly': value.readOnly,
    };
}

