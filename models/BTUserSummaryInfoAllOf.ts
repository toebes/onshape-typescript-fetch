/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTCompanySummaryInfo } from './BTCompanySummaryInfo';
import {
    BTCompanySummaryInfoFromJSON,
    BTCompanySummaryInfoFromJSONTyped,
    BTCompanySummaryInfoToJSON,
} from './BTCompanySummaryInfo';
import type { GlobalPermissionInfo } from './GlobalPermissionInfo';
import {
    GlobalPermissionInfoFromJSON,
    GlobalPermissionInfoFromJSONTyped,
    GlobalPermissionInfoToJSON,
} from './GlobalPermissionInfo';

/**
 * 
 * @export
 * @interface BTUserSummaryInfoAllOf
 */
export interface BTUserSummaryInfoAllOf {
    /**
     * 
     * @type {BTCompanySummaryInfo}
     * @memberof BTUserSummaryInfoAllOf
     */
    company?: BTCompanySummaryInfo;
    /**
     * 
     * @type {string}
     * @memberof BTUserSummaryInfoAllOf
     */
    documentationNameOverride?: string;
    /**
     * 
     * @type {GlobalPermissionInfo}
     * @memberof BTUserSummaryInfoAllOf
     */
    globalPermissions?: GlobalPermissionInfo;
    /**
     * 
     * @type {number}
     * @memberof BTUserSummaryInfoAllOf
     */
    invitationState?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTUserSummaryInfoAllOf
     */
    isGuest?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTUserSummaryInfoAllOf
     */
    isLight?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof BTUserSummaryInfoAllOf
     */
    lastLoginTime?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof BTUserSummaryInfoAllOf
     */
    personalMessageAllowed?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BTUserSummaryInfoAllOf
     */
    source?: number;
}

/**
 * Check if a given object implements the BTUserSummaryInfoAllOf interface.
 */
export function instanceOfBTUserSummaryInfoAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTUserSummaryInfoAllOfFromJSON(json: any): BTUserSummaryInfoAllOf {
    return BTUserSummaryInfoAllOfFromJSONTyped(json, false);
}

export function BTUserSummaryInfoAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTUserSummaryInfoAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'company': !exists(json, 'company') ? undefined : BTCompanySummaryInfoFromJSON(json['company']),
        'documentationNameOverride': !exists(json, 'documentationNameOverride') ? undefined : json['documentationNameOverride'],
        'globalPermissions': !exists(json, 'globalPermissions') ? undefined : GlobalPermissionInfoFromJSON(json['globalPermissions']),
        'invitationState': !exists(json, 'invitationState') ? undefined : json['invitationState'],
        'isGuest': !exists(json, 'isGuest') ? undefined : json['isGuest'],
        'isLight': !exists(json, 'isLight') ? undefined : json['isLight'],
        'lastLoginTime': !exists(json, 'lastLoginTime') ? undefined : (new Date(json['lastLoginTime'])),
        'personalMessageAllowed': !exists(json, 'personalMessageAllowed') ? undefined : json['personalMessageAllowed'],
        'source': !exists(json, 'source') ? undefined : json['source'],
    };
}

export function BTUserSummaryInfoAllOfToJSON(value?: BTUserSummaryInfoAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company': BTCompanySummaryInfoToJSON(value.company),
        'documentationNameOverride': value.documentationNameOverride,
        'globalPermissions': GlobalPermissionInfoToJSON(value.globalPermissions),
        'invitationState': value.invitationState,
        'isGuest': value.isGuest,
        'isLight': value.isLight,
        'lastLoginTime': value.lastLoginTime === undefined ? undefined : (value.lastLoginTime.toISOString()),
        'personalMessageAllowed': value.personalMessageAllowed,
        'source': value.source,
    };
}

