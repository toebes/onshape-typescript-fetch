/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTMParameter1 } from './BTMParameter1';
import {
    BTMParameter1FromJSON,
    BTMParameter1FromJSONTyped,
    BTMParameter1ToJSON,
} from './BTMParameter1';
import type { BTMSketchGeomEntity5 } from './BTMSketchGeomEntity5';
import {
    BTMSketchGeomEntity5FromJSON,
    BTMSketchGeomEntity5FromJSONTyped,
    BTMSketchGeomEntity5ToJSON,
 BTMSketchGeomEntity5SuperToJSON,
} from './BTMSketchGeomEntity5';
import type { CombinedSketchEntityType } from './CombinedSketchEntityType';
import {
    CombinedSketchEntityTypeFromJSON,
    CombinedSketchEntityTypeFromJSONTyped,
    CombinedSketchEntityTypeToJSON,
} from './CombinedSketchEntityType';
import type { GBTSketchEntityType } from './GBTSketchEntityType';
import {
    GBTSketchEntityTypeFromJSON,
    GBTSketchEntityTypeFromJSONTyped,
    GBTSketchEntityTypeToJSON,
} from './GBTSketchEntityType';

/**
 * 
 * @export
 * @interface BTMSketchImageEntity763
 */
export interface BTMSketchImageEntity763 extends BTMSketchGeomEntity5 {
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTMSketchImageEntity763
     */
    btType?: string;
    /**
     * 
     * @type {number}
     * @memberof BTMSketchImageEntity763
     */
    aspectRatio?: number;
    /**
     * 
     * @type {number}
     * @memberof BTMSketchImageEntity763
     */
    originX?: number;
    /**
     * 
     * @type {number}
     * @memberof BTMSketchImageEntity763
     */
    originY?: number;
    /**
     * 
     * @type {number}
     * @memberof BTMSketchImageEntity763
     */
    xaxisX?: number;
    /**
     * 
     * @type {number}
     * @memberof BTMSketchImageEntity763
     */
    xaxisY?: number;
}

/**
 * Check if a given object implements the BTMSketchImageEntity763 interface.
 */
export function instanceOfBTMSketchImageEntity763(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTMSketchImageEntity763FromJSON(json: any): BTMSketchImageEntity763 {
    return BTMSketchImageEntity763FromJSONTyped(json, false);
}

export function BTMSketchImageEntity763FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTMSketchImageEntity763 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...BTMSketchGeomEntity5FromJSONTyped(json, ignoreDiscriminator),
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'aspectRatio': !exists(json, 'aspectRatio') ? undefined : json['aspectRatio'],
        'originX': !exists(json, 'originX') ? undefined : json['originX'],
        'originY': !exists(json, 'originY') ? undefined : json['originY'],
        'xaxisX': !exists(json, 'xaxisX') ? undefined : json['xaxisX'],
        'xaxisY': !exists(json, 'xaxisY') ? undefined : json['xaxisY'],
    };
}

export function BTMSketchImageEntity763ToJSON(value?: BTMSketchImageEntity763 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...BTMSketchGeomEntity5SuperToJSON(value),
        'btType': value.btType,
        'aspectRatio': value.aspectRatio,
        'originX': value.originX,
        'originY': value.originY,
        'xaxisX': value.xaxisX,
        'xaxisY': value.xaxisY,
    };
}

