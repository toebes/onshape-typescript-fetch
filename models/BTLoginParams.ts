/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTWebClientCapabilitiesParams } from './BTWebClientCapabilitiesParams';
import {
    BTWebClientCapabilitiesParamsFromJSON,
    BTWebClientCapabilitiesParamsFromJSONTyped,
    BTWebClientCapabilitiesParamsToJSON,
} from './BTWebClientCapabilitiesParams';
import type { BTWebRendererPerformanceMeasurementParams } from './BTWebRendererPerformanceMeasurementParams';
import {
    BTWebRendererPerformanceMeasurementParamsFromJSON,
    BTWebRendererPerformanceMeasurementParamsFromJSONTyped,
    BTWebRendererPerformanceMeasurementParamsToJSON,
} from './BTWebRendererPerformanceMeasurementParams';

/**
 * 
 * @export
 * @interface BTLoginParams
 */
export interface BTLoginParams {
    /**
     * 
     * @type {string}
     * @memberof BTLoginParams
     */
    deviceId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTLoginParams
     */
    email?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTLoginParams
     */
    enableTotp?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTLoginParams
     */
    isRecaptchaV3?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTLoginParams
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof BTLoginParams
     */
    randomToken?: string;
    /**
     * 
     * @type {string}
     * @memberof BTLoginParams
     */
    recaptchaToken?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTLoginParams
     */
    rememberTotp?: boolean;
    /**
     * 
     * @type {BTWebRendererPerformanceMeasurementParams}
     * @memberof BTLoginParams
     */
    rendererPerformanceMeasurement?: BTWebRendererPerformanceMeasurementParams;
    /**
     * 
     * @type {string}
     * @memberof BTLoginParams
     */
    totp?: string;
    /**
     * 
     * @type {BTWebClientCapabilitiesParams}
     * @memberof BTLoginParams
     */
    webClientCapabilities?: BTWebClientCapabilitiesParams;
}

/**
 * Check if a given object implements the BTLoginParams interface.
 */
export function instanceOfBTLoginParams(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTLoginParamsFromJSON(json: any): BTLoginParams {
    return BTLoginParamsFromJSONTyped(json, false);
}

export function BTLoginParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTLoginParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deviceId': !exists(json, 'deviceId') ? undefined : json['deviceId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'enableTotp': !exists(json, 'enableTotp') ? undefined : json['enableTotp'],
        'isRecaptchaV3': !exists(json, 'isRecaptchaV3') ? undefined : json['isRecaptchaV3'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'randomToken': !exists(json, 'randomToken') ? undefined : json['randomToken'],
        'recaptchaToken': !exists(json, 'recaptchaToken') ? undefined : json['recaptchaToken'],
        'rememberTotp': !exists(json, 'rememberTotp') ? undefined : json['rememberTotp'],
        'rendererPerformanceMeasurement': !exists(json, 'rendererPerformanceMeasurement') ? undefined : BTWebRendererPerformanceMeasurementParamsFromJSON(json['rendererPerformanceMeasurement']),
        'totp': !exists(json, 'totp') ? undefined : json['totp'],
        'webClientCapabilities': !exists(json, 'webClientCapabilities') ? undefined : BTWebClientCapabilitiesParamsFromJSON(json['webClientCapabilities']),
    };
}

export function BTLoginParamsToJSON(value?: BTLoginParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deviceId': value.deviceId,
        'email': value.email,
        'enableTotp': value.enableTotp,
        'isRecaptchaV3': value.isRecaptchaV3,
        'password': value.password,
        'randomToken': value.randomToken,
        'recaptchaToken': value.recaptchaToken,
        'rememberTotp': value.rememberTotp,
        'rendererPerformanceMeasurement': BTWebRendererPerformanceMeasurementParamsToJSON(value.rendererPerformanceMeasurement),
        'totp': value.totp,
        'webClientCapabilities': BTWebClientCapabilitiesParamsToJSON(value.webClientCapabilities),
    };
}

