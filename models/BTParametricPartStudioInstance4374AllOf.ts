/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTDocumentWithVersionAndElementId } from './BTDocumentWithVersionAndElementId';
import {
    BTDocumentWithVersionAndElementIdFromJSON,
    BTDocumentWithVersionAndElementIdFromJSONTyped,
    BTDocumentWithVersionAndElementIdToJSON,
} from './BTDocumentWithVersionAndElementId';
import type { BTDocumentWithVersionId } from './BTDocumentWithVersionId';
import {
    BTDocumentWithVersionIdFromJSON,
    BTDocumentWithVersionIdFromJSONTyped,
    BTDocumentWithVersionIdToJSON,
} from './BTDocumentWithVersionId';
import type { BTElementReference725 } from './BTElementReference725';
import {
    BTElementReference725FromJSON,
    BTElementReference725FromJSONTyped,
    BTElementReference725ToJSON,
} from './BTElementReference725';
import type { BTMParameter1 } from './BTMParameter1';
import {
    BTMParameter1FromJSON,
    BTMParameter1FromJSONTyped,
    BTMParameter1ToJSON,
} from './BTMParameter1';
import type { BTMParameterReferencePartStudio3302 } from './BTMParameterReferencePartStudio3302';
import {
    BTMParameterReferencePartStudio3302FromJSON,
    BTMParameterReferencePartStudio3302FromJSONTyped,
    BTMParameterReferencePartStudio3302ToJSON,
} from './BTMParameterReferencePartStudio3302';
import type { BTMParametricPartStudioFeature3883 } from './BTMParametricPartStudioFeature3883';
import {
    BTMParametricPartStudioFeature3883FromJSON,
    BTMParametricPartStudioFeature3883FromJSONTyped,
    BTMParametricPartStudioFeature3883ToJSON,
} from './BTMParametricPartStudioFeature3883';
import type { BTMicroversionId366 } from './BTMicroversionId366';
import {
    BTMicroversionId366FromJSON,
    BTMicroversionId366FromJSONTyped,
    BTMicroversionId366ToJSON,
} from './BTMicroversionId366';
import type { BTNodeWithReference } from './BTNodeWithReference';
import {
    BTNodeWithReferenceFromJSON,
    BTNodeWithReferenceFromJSONTyped,
    BTNodeWithReferenceToJSON,
} from './BTNodeWithReference';

/**
 * 
 * @export
 * @interface BTParametricPartStudioInstance4374AllOf
 */
export interface BTParametricPartStudioInstance4374AllOf {
    /**
     * 
     * @type {string}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    btType?: string;
    /**
     * 
     * @type {Array<BTMParameter1>}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    _configuration?: Array<BTMParameter1>;
    /**
     * 
     * @type {string}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    documentId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    elementId?: string;
    /**
     * 
     * @type {BTElementReference725}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    elementReference?: BTElementReference725;
    /**
     * 
     * @type {BTDocumentWithVersionId}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    externalDocumentWithVersion?: BTDocumentWithVersionId;
    /**
     * 
     * @type {BTDocumentWithVersionAndElementId}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    externalDocumentWithVersionAndElementId?: BTDocumentWithVersionAndElementId;
    /**
     * 
     * @type {boolean}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    lockedState?: boolean;
    /**
     * 
     * @type {BTMicroversionId366}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    microversionId?: BTMicroversionId366;
    /**
     * 
     * @type {Array<BTNodeWithReference>}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    nodeWithReferenceList?: Array<BTNodeWithReference>;
    /**
     * 
     * @type {BTMParametricPartStudioFeature3883}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    parametricPartStudioFeature?: BTMParametricPartStudioFeature3883;
    /**
     * 
     * @type {BTMParameterReferencePartStudio3302}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    referenceParameter?: BTMParameterReferencePartStudio3302;
    /**
     * 
     * @type {string}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    versionId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTParametricPartStudioInstance4374AllOf
     */
    versionIdIfExternal?: string;
}

/**
 * Check if a given object implements the BTParametricPartStudioInstance4374AllOf interface.
 */
export function instanceOfBTParametricPartStudioInstance4374AllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTParametricPartStudioInstance4374AllOfFromJSON(json: any): BTParametricPartStudioInstance4374AllOf {
    return BTParametricPartStudioInstance4374AllOfFromJSONTyped(json, false);
}

export function BTParametricPartStudioInstance4374AllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTParametricPartStudioInstance4374AllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        '_configuration': !exists(json, 'configuration') ? undefined : ((json['configuration'] as Array<any>).map(BTMParameter1FromJSON)),
        'documentId': !exists(json, 'documentId') ? undefined : json['documentId'],
        'elementId': !exists(json, 'elementId') ? undefined : json['elementId'],
        'elementReference': !exists(json, 'elementReference') ? undefined : BTElementReference725FromJSON(json['elementReference']),
        'externalDocumentWithVersion': !exists(json, 'externalDocumentWithVersion') ? undefined : BTDocumentWithVersionIdFromJSON(json['externalDocumentWithVersion']),
        'externalDocumentWithVersionAndElementId': !exists(json, 'externalDocumentWithVersionAndElementId') ? undefined : BTDocumentWithVersionAndElementIdFromJSON(json['externalDocumentWithVersionAndElementId']),
        'lockedState': !exists(json, 'lockedState') ? undefined : json['lockedState'],
        'microversionId': !exists(json, 'microversionId') ? undefined : BTMicroversionId366FromJSON(json['microversionId']),
        'nodeWithReferenceList': !exists(json, 'nodeWithReferenceList') ? undefined : ((json['nodeWithReferenceList'] as Array<any>).map(BTNodeWithReferenceFromJSON)),
        'parametricPartStudioFeature': !exists(json, 'parametricPartStudioFeature') ? undefined : BTMParametricPartStudioFeature3883FromJSON(json['parametricPartStudioFeature']),
        'referenceParameter': !exists(json, 'referenceParameter') ? undefined : BTMParameterReferencePartStudio3302FromJSON(json['referenceParameter']),
        'versionId': !exists(json, 'versionId') ? undefined : json['versionId'],
        'versionIdIfExternal': !exists(json, 'versionIdIfExternal') ? undefined : json['versionIdIfExternal'],
    };
}

export function BTParametricPartStudioInstance4374AllOfToJSON(value?: BTParametricPartStudioInstance4374AllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'btType': value.btType,
        'configuration': value._configuration === undefined ? undefined : ((value._configuration as Array<any>).map(BTMParameter1ToJSON)),
        'documentId': value.documentId,
        'elementId': value.elementId,
        'elementReference': BTElementReference725ToJSON(value.elementReference),
        'externalDocumentWithVersion': BTDocumentWithVersionIdToJSON(value.externalDocumentWithVersion),
        'externalDocumentWithVersionAndElementId': BTDocumentWithVersionAndElementIdToJSON(value.externalDocumentWithVersionAndElementId),
        'lockedState': value.lockedState,
        'microversionId': BTMicroversionId366ToJSON(value.microversionId),
        'nodeWithReferenceList': value.nodeWithReferenceList === undefined ? undefined : ((value.nodeWithReferenceList as Array<any>).map(BTNodeWithReferenceToJSON)),
        'parametricPartStudioFeature': BTMParametricPartStudioFeature3883ToJSON(value.parametricPartStudioFeature),
        'referenceParameter': BTMParameterReferencePartStudio3302ToJSON(value.referenceParameter),
        'versionId': value.versionId,
        'versionIdIfExternal': value.versionIdIfExternal,
    };
}

