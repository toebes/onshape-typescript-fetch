/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTElementLibraryReferenceData3133 } from './BTElementLibraryReferenceData3133';
import {
    BTElementLibraryReferenceData3133FromJSON,
    BTElementLibraryReferenceData3133FromJSONTyped,
    BTElementLibraryReferenceData3133ToJSON,
} from './BTElementLibraryReferenceData3133';
import type { BTMParameter1 } from './BTMParameter1';
import {
    BTMParameter1FromJSON,
    BTMParameter1FromJSONTyped,
    BTMParameter1ToJSON,
} from './BTMParameter1';
import type { BTMParameterQueryList148 } from './BTMParameterQueryList148';
import {
    BTMParameterQueryList148FromJSON,
    BTMParameterQueryList148FromJSONTyped,
    BTMParameterQueryList148ToJSON,
} from './BTMParameterQueryList148';
import type { BTPSOIdentity2741 } from './BTPSOIdentity2741';
import {
    BTPSOIdentity2741FromJSON,
    BTPSOIdentity2741FromJSONTyped,
    BTPSOIdentity2741ToJSON,
} from './BTPSOIdentity2741';

/**
 * 
 * @export
 * @interface BTMParameterReferencePartStudio3302
 */
export interface BTMParameterReferencePartStudio3302 {
    /**
     * 
     * @type {boolean}
     * @memberof BTMParameterReferencePartStudio3302
     */
    blockBuildFunctionAccess?: boolean;
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    btType?: string;
    /**
     * 
     * @type {Array<BTMParameter1>}
     * @memberof BTMParameterReferencePartStudio3302
     */
    _configuration?: Array<BTMParameter1>;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    documentId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    documentVersionId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    elementId?: string;
    /**
     * 
     * @type {BTElementLibraryReferenceData3133}
     * @memberof BTMParameterReferencePartStudio3302
     */
    elementLibraryData?: BTElementLibraryReferenceData3133;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    featureScriptType?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BTMParameterReferencePartStudio3302
     */
    ids?: Array<string>;
    /**
     * Element microversion that is being imported.
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    importMicroversion?: string;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    microversioId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    namespace?: string;
    /**
     * ID of the parameter's node.
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    nodeId?: string;
    /**
     * Unique ID of the parameter.
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    parameterId?: string;
    /**
     * 
     * @type {BTPSOIdentity2741}
     * @memberof BTMParameterReferencePartStudio3302
     */
    partIdentity?: BTPSOIdentity2741;
    /**
     * 
     * @type {BTMParameterQueryList148}
     * @memberof BTMParameterReferencePartStudio3302
     */
    partQuery?: BTMParameterQueryList148;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    queryDataKey?: string;
    /**
     * 
     * @type {string}
     * @memberof BTMParameterReferencePartStudio3302
     */
    standardContentParametersId?: string;
}

/**
 * Check if a given object implements the BTMParameterReferencePartStudio3302 interface.
 */
export function instanceOfBTMParameterReferencePartStudio3302(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTMParameterReferencePartStudio3302FromJSON(json: any): BTMParameterReferencePartStudio3302 {
    return BTMParameterReferencePartStudio3302FromJSONTyped(json, false);
}

export function BTMParameterReferencePartStudio3302FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTMParameterReferencePartStudio3302 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockBuildFunctionAccess': !exists(json, 'blockBuildFunctionAccess') ? undefined : json['blockBuildFunctionAccess'],
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        '_configuration': !exists(json, 'configuration') ? undefined : ((json['configuration'] as Array<any>).map(BTMParameter1FromJSON)),
        'documentId': !exists(json, 'documentId') ? undefined : json['documentId'],
        'documentVersionId': !exists(json, 'documentVersionId') ? undefined : json['documentVersionId'],
        'elementId': !exists(json, 'elementId') ? undefined : json['elementId'],
        'elementLibraryData': !exists(json, 'elementLibraryData') ? undefined : BTElementLibraryReferenceData3133FromJSON(json['elementLibraryData']),
        'featureScriptType': !exists(json, 'featureScriptType') ? undefined : json['featureScriptType'],
        'ids': !exists(json, 'ids') ? undefined : json['ids'],
        'importMicroversion': !exists(json, 'importMicroversion') ? undefined : json['importMicroversion'],
        'microversioId': !exists(json, 'microversioId') ? undefined : json['microversioId'],
        'namespace': !exists(json, 'namespace') ? undefined : json['namespace'],
        'nodeId': !exists(json, 'nodeId') ? undefined : json['nodeId'],
        'parameterId': !exists(json, 'parameterId') ? undefined : json['parameterId'],
        'partIdentity': !exists(json, 'partIdentity') ? undefined : BTPSOIdentity2741FromJSON(json['partIdentity']),
        'partQuery': !exists(json, 'partQuery') ? undefined : BTMParameterQueryList148FromJSON(json['partQuery']),
        'queryDataKey': !exists(json, 'queryDataKey') ? undefined : json['queryDataKey'],
        'standardContentParametersId': !exists(json, 'standardContentParametersId') ? undefined : json['standardContentParametersId'],
    };
}

export function BTMParameterReferencePartStudio3302ToJSON(value?: BTMParameterReferencePartStudio3302 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockBuildFunctionAccess': value.blockBuildFunctionAccess,
        'btType': value.btType,
        'configuration': value._configuration === undefined ? undefined : ((value._configuration as Array<any>).map(BTMParameter1ToJSON)),
        'documentId': value.documentId,
        'documentVersionId': value.documentVersionId,
        'elementId': value.elementId,
        'elementLibraryData': BTElementLibraryReferenceData3133ToJSON(value.elementLibraryData),
        'featureScriptType': value.featureScriptType,
        'ids': value.ids,
        'importMicroversion': value.importMicroversion,
        'microversioId': value.microversioId,
        'namespace': value.namespace,
        'nodeId': value.nodeId,
        'parameterId': value.parameterId,
        'partIdentity': BTPSOIdentity2741ToJSON(value.partIdentity),
        'partQuery': BTMParameterQueryList148ToJSON(value.partQuery),
        'queryDataKey': value.queryDataKey,
        'standardContentParametersId': value.standardContentParametersId,
    };
}

