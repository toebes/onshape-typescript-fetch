/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTBillOfMaterialsItemSourceInfo } from './BTBillOfMaterialsItemSourceInfo';
import {
    BTBillOfMaterialsItemSourceInfoFromJSON,
    BTBillOfMaterialsItemSourceInfoFromJSONTyped,
    BTBillOfMaterialsItemSourceInfoToJSON,
} from './BTBillOfMaterialsItemSourceInfo';

/**
 * 
 * @export
 * @interface BTBillOfMaterialsRowInfo
 */
export interface BTBillOfMaterialsRowInfo {
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof BTBillOfMaterialsRowInfo
     */
    headerIdToValue?: { [key: string]: object; };
    /**
     * URI to fetch complete information of the resource.
     * @type {string}
     * @memberof BTBillOfMaterialsRowInfo
     */
    href?: string;
    /**
     * Id of the resource.
     * @type {string}
     * @memberof BTBillOfMaterialsRowInfo
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof BTBillOfMaterialsRowInfo
     */
    indentLevel?: number;
    /**
     * 
     * @type {BTBillOfMaterialsItemSourceInfo}
     * @memberof BTBillOfMaterialsRowInfo
     */
    itemSource?: BTBillOfMaterialsItemSourceInfo;
    /**
     * Name of the resource.
     * @type {string}
     * @memberof BTBillOfMaterialsRowInfo
     */
    name?: string;
    /**
     * Occurrence IDs in the assembly that refer to the part described by this BOM row.
     * @type {Array<string>}
     * @memberof BTBillOfMaterialsRowInfo
     */
    relatedOccurrences?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof BTBillOfMaterialsRowInfo
     */
    rowId?: string;
    /**
     * URI to visualize the resource in a webclient if applicable.
     * @type {string}
     * @memberof BTBillOfMaterialsRowInfo
     */
    viewRef?: string;
}

/**
 * Check if a given object implements the BTBillOfMaterialsRowInfo interface.
 */
export function instanceOfBTBillOfMaterialsRowInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTBillOfMaterialsRowInfoFromJSON(json: any): BTBillOfMaterialsRowInfo {
    return BTBillOfMaterialsRowInfoFromJSONTyped(json, false);
}

export function BTBillOfMaterialsRowInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTBillOfMaterialsRowInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'headerIdToValue': !exists(json, 'headerIdToValue') ? undefined : json['headerIdToValue'],
        'href': !exists(json, 'href') ? undefined : json['href'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'indentLevel': !exists(json, 'indentLevel') ? undefined : json['indentLevel'],
        'itemSource': !exists(json, 'itemSource') ? undefined : BTBillOfMaterialsItemSourceInfoFromJSON(json['itemSource']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'relatedOccurrences': !exists(json, 'relatedOccurrences') ? undefined : json['relatedOccurrences'],
        'rowId': !exists(json, 'rowId') ? undefined : json['rowId'],
        'viewRef': !exists(json, 'viewRef') ? undefined : json['viewRef'],
    };
}

export function BTBillOfMaterialsRowInfoToJSON(value?: BTBillOfMaterialsRowInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'headerIdToValue': value.headerIdToValue,
        'href': value.href,
        'id': value.id,
        'indentLevel': value.indentLevel,
        'itemSource': BTBillOfMaterialsItemSourceInfoToJSON(value.itemSource),
        'name': value.name,
        'relatedOccurrences': value.relatedOccurrences,
        'rowId': value.rowId,
        'viewRef': value.viewRef,
    };
}

