/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GlobalPermissionInfo
 */
export interface GlobalPermissionInfo {
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    accessReports?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    adminEnterprise?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    allowAppStoreAccess?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    allowPublicDocumentsAccess?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    approveReleases?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    branchLockPermissions?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    createChangeOrders?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    createChangeRequests?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    createDocumentsInRoot?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    createProject?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    createReleases?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    createTasks?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    deletePermanently?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    importFiles?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    manageGuestUsers?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    manageNonGeometricItems?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    manageRbac?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    manageStandardContentMetadata?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    manageUsers?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    manageWorkflows?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    shareForAnonymousAccess?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    transferDocumentsFromEnterprise?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    viewChangeOrders?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GlobalPermissionInfo
     */
    viewChangeRequests?: boolean;
}

/**
 * Check if a given object implements the GlobalPermissionInfo interface.
 */
export function instanceOfGlobalPermissionInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GlobalPermissionInfoFromJSON(json: any): GlobalPermissionInfo {
    return GlobalPermissionInfoFromJSONTyped(json, false);
}

export function GlobalPermissionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalPermissionInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessReports': !exists(json, 'accessReports') ? undefined : json['accessReports'],
        'adminEnterprise': !exists(json, 'adminEnterprise') ? undefined : json['adminEnterprise'],
        'allowAppStoreAccess': !exists(json, 'allowAppStoreAccess') ? undefined : json['allowAppStoreAccess'],
        'allowPublicDocumentsAccess': !exists(json, 'allowPublicDocumentsAccess') ? undefined : json['allowPublicDocumentsAccess'],
        'approveReleases': !exists(json, 'approveReleases') ? undefined : json['approveReleases'],
        'branchLockPermissions': !exists(json, 'branchLockPermissions') ? undefined : json['branchLockPermissions'],
        'createChangeOrders': !exists(json, 'createChangeOrders') ? undefined : json['createChangeOrders'],
        'createChangeRequests': !exists(json, 'createChangeRequests') ? undefined : json['createChangeRequests'],
        'createDocumentsInRoot': !exists(json, 'createDocumentsInRoot') ? undefined : json['createDocumentsInRoot'],
        'createProject': !exists(json, 'createProject') ? undefined : json['createProject'],
        'createReleases': !exists(json, 'createReleases') ? undefined : json['createReleases'],
        'createTasks': !exists(json, 'createTasks') ? undefined : json['createTasks'],
        'deletePermanently': !exists(json, 'deletePermanently') ? undefined : json['deletePermanently'],
        'importFiles': !exists(json, 'importFiles') ? undefined : json['importFiles'],
        'manageGuestUsers': !exists(json, 'manageGuestUsers') ? undefined : json['manageGuestUsers'],
        'manageNonGeometricItems': !exists(json, 'manageNonGeometricItems') ? undefined : json['manageNonGeometricItems'],
        'manageRbac': !exists(json, 'manageRbac') ? undefined : json['manageRbac'],
        'manageStandardContentMetadata': !exists(json, 'manageStandardContentMetadata') ? undefined : json['manageStandardContentMetadata'],
        'manageUsers': !exists(json, 'manageUsers') ? undefined : json['manageUsers'],
        'manageWorkflows': !exists(json, 'manageWorkflows') ? undefined : json['manageWorkflows'],
        'shareForAnonymousAccess': !exists(json, 'shareForAnonymousAccess') ? undefined : json['shareForAnonymousAccess'],
        'transferDocumentsFromEnterprise': !exists(json, 'transferDocumentsFromEnterprise') ? undefined : json['transferDocumentsFromEnterprise'],
        'viewChangeOrders': !exists(json, 'viewChangeOrders') ? undefined : json['viewChangeOrders'],
        'viewChangeRequests': !exists(json, 'viewChangeRequests') ? undefined : json['viewChangeRequests'],
    };
}

export function GlobalPermissionInfoToJSON(value?: GlobalPermissionInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessReports': value.accessReports,
        'adminEnterprise': value.adminEnterprise,
        'allowAppStoreAccess': value.allowAppStoreAccess,
        'allowPublicDocumentsAccess': value.allowPublicDocumentsAccess,
        'approveReleases': value.approveReleases,
        'branchLockPermissions': value.branchLockPermissions,
        'createChangeOrders': value.createChangeOrders,
        'createChangeRequests': value.createChangeRequests,
        'createDocumentsInRoot': value.createDocumentsInRoot,
        'createProject': value.createProject,
        'createReleases': value.createReleases,
        'createTasks': value.createTasks,
        'deletePermanently': value.deletePermanently,
        'importFiles': value.importFiles,
        'manageGuestUsers': value.manageGuestUsers,
        'manageNonGeometricItems': value.manageNonGeometricItems,
        'manageRbac': value.manageRbac,
        'manageStandardContentMetadata': value.manageStandardContentMetadata,
        'manageUsers': value.manageUsers,
        'manageWorkflows': value.manageWorkflows,
        'shareForAnonymousAccess': value.shareForAnonymousAccess,
        'transferDocumentsFromEnterprise': value.transferDocumentsFromEnterprise,
        'viewChangeOrders': value.viewChangeOrders,
        'viewChangeRequests': value.viewChangeRequests,
    };
}

