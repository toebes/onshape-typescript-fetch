/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTUserSummaryInfo } from './BTUserSummaryInfo';
import {
    BTUserSummaryInfoFromJSON,
    BTUserSummaryInfoFromJSONTyped,
    BTUserSummaryInfoToJSON,
} from './BTUserSummaryInfo';

/**
 * 
 * @export
 * @interface BTDiscountInfo
 */
export interface BTDiscountInfo {
    /**
     * 
     * @type {number}
     * @memberof BTDiscountInfo
     */
    accountBalance?: number;
    /**
     * 
     * @type {number}
     * @memberof BTDiscountInfo
     */
    amountOff?: number;
    /**
     * 
     * @type {number}
     * @memberof BTDiscountInfo
     */
    couponType?: number;
    /**
     * 
     * @type {number}
     * @memberof BTDiscountInfo
     */
    couponValidMonths?: number;
    /**
     * 
     * @type {Date}
     * @memberof BTDiscountInfo
     */
    createdAt?: Date;
    /**
     * 
     * @type {BTUserSummaryInfo}
     * @memberof BTDiscountInfo
     */
    createdBy?: BTUserSummaryInfo;
    /**
     * 
     * @type {Date}
     * @memberof BTDiscountInfo
     */
    expiresAt?: Date;
    /**
     * URI to fetch complete information of the resource.
     * @type {string}
     * @memberof BTDiscountInfo
     */
    href?: string;
    /**
     * Id of the resource.
     * @type {string}
     * @memberof BTDiscountInfo
     */
    id?: string;
    /**
     * Name of the resource.
     * @type {string}
     * @memberof BTDiscountInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BTDiscountInfo
     */
    ownerId?: string;
    /**
     * 
     * @type {number}
     * @memberof BTDiscountInfo
     */
    percentOff?: number;
    /**
     * 
     * @type {string}
     * @memberof BTDiscountInfo
     */
    planId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTDiscountInfo
     */
    trialEndDate?: string;
    /**
     * 
     * @type {Date}
     * @memberof BTDiscountInfo
     */
    usedAt?: Date;
    /**
     * URI to visualize the resource in a webclient if applicable.
     * @type {string}
     * @memberof BTDiscountInfo
     */
    viewRef?: string;
}

/**
 * Check if a given object implements the BTDiscountInfo interface.
 */
export function instanceOfBTDiscountInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTDiscountInfoFromJSON(json: any): BTDiscountInfo {
    return BTDiscountInfoFromJSONTyped(json, false);
}

export function BTDiscountInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTDiscountInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountBalance': !exists(json, 'accountBalance') ? undefined : json['accountBalance'],
        'amountOff': !exists(json, 'amountOff') ? undefined : json['amountOff'],
        'couponType': !exists(json, 'couponType') ? undefined : json['couponType'],
        'couponValidMonths': !exists(json, 'couponValidMonths') ? undefined : json['couponValidMonths'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'createdBy': !exists(json, 'createdBy') ? undefined : BTUserSummaryInfoFromJSON(json['createdBy']),
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (new Date(json['expiresAt'])),
        'href': !exists(json, 'href') ? undefined : json['href'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'percentOff': !exists(json, 'percentOff') ? undefined : json['percentOff'],
        'planId': !exists(json, 'planId') ? undefined : json['planId'],
        'trialEndDate': !exists(json, 'trialEndDate') ? undefined : json['trialEndDate'],
        'usedAt': !exists(json, 'usedAt') ? undefined : (new Date(json['usedAt'])),
        'viewRef': !exists(json, 'viewRef') ? undefined : json['viewRef'],
    };
}

export function BTDiscountInfoToJSON(value?: BTDiscountInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountBalance': value.accountBalance,
        'amountOff': value.amountOff,
        'couponType': value.couponType,
        'couponValidMonths': value.couponValidMonths,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'createdBy': BTUserSummaryInfoToJSON(value.createdBy),
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'href': value.href,
        'id': value.id,
        'name': value.name,
        'ownerId': value.ownerId,
        'percentOff': value.percentOff,
        'planId': value.planId,
        'trialEndDate': value.trialEndDate,
        'usedAt': value.usedAt === undefined ? undefined : (value.usedAt.toISOString()),
        'viewRef': value.viewRef,
    };
}

