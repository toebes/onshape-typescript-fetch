/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GBTDataItemFormat } from './GBTDataItemFormat';
import {
    GBTDataItemFormatFromJSON,
    GBTDataItemFormatFromJSONTyped,
    GBTDataItemFormatToJSON,
} from './GBTDataItemFormat';

/**
 * 
 * @export
 * @interface BTForeignDataResponse1070
 */
export interface BTForeignDataResponse1070 {
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTForeignDataResponse1070
     */
    btType?: string;
    /**
     * 
     * @type {string}
     * @memberof BTForeignDataResponse1070
     */
    bucketName?: string;
    /**
     * 
     * @type {string}
     * @memberof BTForeignDataResponse1070
     */
    bucketPath?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BTForeignDataResponse1070
     */
    cacheChunkList?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof BTForeignDataResponse1070
     */
    dataId?: string;
    /**
     * 
     * @type {GBTDataItemFormat}
     * @memberof BTForeignDataResponse1070
     */
    format?: GBTDataItemFormat;
    /**
     * 
     * @type {string}
     * @memberof BTForeignDataResponse1070
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BTForeignDataResponse1070
     */
    region?: string;
    /**
     * 
     * @type {number}
     * @memberof BTForeignDataResponse1070
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof BTForeignDataResponse1070
     */
    storageType?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTForeignDataResponse1070
     */
    useLocalStorage?: boolean;
}

/**
 * Check if a given object implements the BTForeignDataResponse1070 interface.
 */
export function instanceOfBTForeignDataResponse1070(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTForeignDataResponse1070FromJSON(json: any): BTForeignDataResponse1070 {
    return BTForeignDataResponse1070FromJSONTyped(json, false);
}

export function BTForeignDataResponse1070FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTForeignDataResponse1070 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'bucketName': !exists(json, 'bucketName') ? undefined : json['bucketName'],
        'bucketPath': !exists(json, 'bucketPath') ? undefined : json['bucketPath'],
        'cacheChunkList': !exists(json, 'cacheChunkList') ? undefined : json['cacheChunkList'],
        'dataId': !exists(json, 'dataId') ? undefined : json['dataId'],
        'format': !exists(json, 'format') ? undefined : GBTDataItemFormatFromJSON(json['format']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'region': !exists(json, 'region') ? undefined : json['region'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'storageType': !exists(json, 'storageType') ? undefined : json['storageType'],
        'useLocalStorage': !exists(json, 'useLocalStorage') ? undefined : json['useLocalStorage'],
    };
}

export function BTForeignDataResponse1070ToJSON(value?: BTForeignDataResponse1070 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'btType': value.btType,
        'bucketName': value.bucketName,
        'bucketPath': value.bucketPath,
        'cacheChunkList': value.cacheChunkList,
        'dataId': value.dataId,
        'format': GBTDataItemFormatToJSON(value.format),
        'name': value.name,
        'region': value.region,
        'size': value.size,
        'storageType': value.storageType,
        'useLocalStorage': value.useLocalStorage,
    };
}

