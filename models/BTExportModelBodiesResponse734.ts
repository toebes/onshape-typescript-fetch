/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTExportModelBody1272 } from './BTExportModelBody1272';
import {
    BTExportModelBody1272FromJSON,
    BTExportModelBody1272FromJSONTyped,
    BTExportModelBody1272ToJSON,
} from './BTExportModelBody1272';
import type { BTExportModelProperties3216 } from './BTExportModelProperties3216';
import {
    BTExportModelProperties3216FromJSON,
    BTExportModelProperties3216FromJSONTyped,
    BTExportModelProperties3216ToJSON,
} from './BTExportModelProperties3216';
import type { BTMicroversionId366 } from './BTMicroversionId366';
import {
    BTMicroversionId366FromJSON,
    BTMicroversionId366FromJSONTyped,
    BTMicroversionId366ToJSON,
} from './BTMicroversionId366';
import type { GBTErrorStringEnum } from './GBTErrorStringEnum';
import {
    GBTErrorStringEnumFromJSON,
    GBTErrorStringEnumFromJSONTyped,
    GBTErrorStringEnumToJSON,
} from './GBTErrorStringEnum';

/**
 * 
 * @export
 * @interface BTExportModelBodiesResponse734
 */
export interface BTExportModelBodiesResponse734 {
    /**
     * 
     * @type {Array<BTExportModelBody1272>}
     * @memberof BTExportModelBodiesResponse734
     */
    bodies?: Array<BTExportModelBody1272>;
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTExportModelBodiesResponse734
     */
    btType?: string;
    /**
     * 
     * @type {GBTErrorStringEnum}
     * @memberof BTExportModelBodiesResponse734
     */
    errorEnum?: GBTErrorStringEnum;
    /**
     * 
     * @type {BTMicroversionId366}
     * @memberof BTExportModelBodiesResponse734
     */
    microversionId?: BTMicroversionId366;
    /**
     * 
     * @type {{ [key: string]: BTExportModelProperties3216; }}
     * @memberof BTExportModelBodiesResponse734
     */
    nodeIdToReferencedProperty?: { [key: string]: BTExportModelProperties3216; };
}

/**
 * Check if a given object implements the BTExportModelBodiesResponse734 interface.
 */
export function instanceOfBTExportModelBodiesResponse734(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTExportModelBodiesResponse734FromJSON(json: any): BTExportModelBodiesResponse734 {
    return BTExportModelBodiesResponse734FromJSONTyped(json, false);
}

export function BTExportModelBodiesResponse734FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTExportModelBodiesResponse734 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bodies': !exists(json, 'bodies') ? undefined : ((json['bodies'] as Array<any>).map(BTExportModelBody1272FromJSON)),
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'errorEnum': !exists(json, 'errorEnum') ? undefined : GBTErrorStringEnumFromJSON(json['errorEnum']),
        'microversionId': !exists(json, 'microversionId') ? undefined : BTMicroversionId366FromJSON(json['microversionId']),
        'nodeIdToReferencedProperty': !exists(json, 'nodeIdToReferencedProperty') ? undefined : (mapValues(json['nodeIdToReferencedProperty'], BTExportModelProperties3216FromJSON)),
    };
}

export function BTExportModelBodiesResponse734ToJSON(value?: BTExportModelBodiesResponse734 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bodies': value.bodies === undefined ? undefined : ((value.bodies as Array<any>).map(BTExportModelBody1272ToJSON)),
        'btType': value.btType,
        'errorEnum': GBTErrorStringEnumToJSON(value.errorEnum),
        'microversionId': BTMicroversionId366ToJSON(value.microversionId),
        'nodeIdToReferencedProperty': value.nodeIdToReferencedProperty === undefined ? undefined : (mapValues(value.nodeIdToReferencedProperty, BTExportModelProperties3216ToJSON)),
    };
}

