/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTComputedAssemblyPropertyConfig } from './BTComputedAssemblyPropertyConfig';
import {
    BTComputedAssemblyPropertyConfigFromJSON,
    BTComputedAssemblyPropertyConfigFromJSONTyped,
    BTComputedAssemblyPropertyConfigToJSON,
} from './BTComputedAssemblyPropertyConfig';
import type { BTComputedPartPropertyConfig } from './BTComputedPartPropertyConfig';
import {
    BTComputedPartPropertyConfigFromJSON,
    BTComputedPartPropertyConfigFromJSONTyped,
    BTComputedPartPropertyConfigToJSON,
} from './BTComputedPartPropertyConfig';
import type { BTMetadataEnumValue } from './BTMetadataEnumValue';
import {
    BTMetadataEnumValueFromJSON,
    BTMetadataEnumValueFromJSONTyped,
    BTMetadataEnumValueToJSON,
} from './BTMetadataEnumValue';

/**
 * 
 * @export
 * @interface BTCategoryPropertyConfigInfo
 */
export interface BTCategoryPropertyConfigInfo {
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertyAggregatedPropertyId?: string;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertyAggregationOperator?: number;
    /**
     * 
     * @type {BTComputedAssemblyPropertyConfig}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertyConfig?: BTComputedAssemblyPropertyConfig;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertyErrorValuePolicy?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertyFilterInverted?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertyFilterPropertyId?: string;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertyMissingValuePolicy?: number;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedAssemblyPropertySecondaryPropertyId?: string;
    /**
     * 
     * @type {BTComputedPartPropertyConfig}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedPartPropertyConfig?: BTComputedPartPropertyConfig;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedPropertyFunctionName?: string;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedPropertyFunctionNamespace?: string;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    computedPropertyFunctionURL?: string;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    defaultValue?: string;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    displayName?: string;
    /**
     * 
     * @type {Array<BTMetadataEnumValue>}
     * @memberof BTCategoryPropertyConfigInfo
     */
    enumValues?: Array<BTMetadataEnumValue>;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    maxCount?: number;
    /**
     * 
     * @type {Date}
     * @memberof BTCategoryPropertyConfigInfo
     */
    maxDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    maxLength?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    maxValue?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    minCount?: number;
    /**
     * 
     * @type {Date}
     * @memberof BTCategoryPropertyConfigInfo
     */
    minDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    minLength?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    minValue?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyConfigInfo
     */
    multiline?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyConfigInfo
     */
    multivalued?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyConfigInfo
     */
    pattern?: string;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    publishState?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyConfigInfo
     */
    quantityType?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyConfigInfo
     */
    required?: boolean;
}

/**
 * Check if a given object implements the BTCategoryPropertyConfigInfo interface.
 */
export function instanceOfBTCategoryPropertyConfigInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTCategoryPropertyConfigInfoFromJSON(json: any): BTCategoryPropertyConfigInfo {
    return BTCategoryPropertyConfigInfoFromJSONTyped(json, false);
}

export function BTCategoryPropertyConfigInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTCategoryPropertyConfigInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'computedAssemblyPropertyAggregatedPropertyId': !exists(json, 'computedAssemblyPropertyAggregatedPropertyId') ? undefined : json['computedAssemblyPropertyAggregatedPropertyId'],
        'computedAssemblyPropertyAggregationOperator': !exists(json, 'computedAssemblyPropertyAggregationOperator') ? undefined : json['computedAssemblyPropertyAggregationOperator'],
        'computedAssemblyPropertyConfig': !exists(json, 'computedAssemblyPropertyConfig') ? undefined : BTComputedAssemblyPropertyConfigFromJSON(json['computedAssemblyPropertyConfig']),
        'computedAssemblyPropertyErrorValuePolicy': !exists(json, 'computedAssemblyPropertyErrorValuePolicy') ? undefined : json['computedAssemblyPropertyErrorValuePolicy'],
        'computedAssemblyPropertyFilterInverted': !exists(json, 'computedAssemblyPropertyFilterInverted') ? undefined : json['computedAssemblyPropertyFilterInverted'],
        'computedAssemblyPropertyFilterPropertyId': !exists(json, 'computedAssemblyPropertyFilterPropertyId') ? undefined : json['computedAssemblyPropertyFilterPropertyId'],
        'computedAssemblyPropertyMissingValuePolicy': !exists(json, 'computedAssemblyPropertyMissingValuePolicy') ? undefined : json['computedAssemblyPropertyMissingValuePolicy'],
        'computedAssemblyPropertySecondaryPropertyId': !exists(json, 'computedAssemblyPropertySecondaryPropertyId') ? undefined : json['computedAssemblyPropertySecondaryPropertyId'],
        'computedPartPropertyConfig': !exists(json, 'computedPartPropertyConfig') ? undefined : BTComputedPartPropertyConfigFromJSON(json['computedPartPropertyConfig']),
        'computedPropertyFunctionName': !exists(json, 'computedPropertyFunctionName') ? undefined : json['computedPropertyFunctionName'],
        'computedPropertyFunctionNamespace': !exists(json, 'computedPropertyFunctionNamespace') ? undefined : json['computedPropertyFunctionNamespace'],
        'computedPropertyFunctionURL': !exists(json, 'computedPropertyFunctionURL') ? undefined : json['computedPropertyFunctionURL'],
        'defaultValue': !exists(json, 'defaultValue') ? undefined : json['defaultValue'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'enumValues': !exists(json, 'enumValues') ? undefined : ((json['enumValues'] as Array<any>).map(BTMetadataEnumValueFromJSON)),
        'maxCount': !exists(json, 'maxCount') ? undefined : json['maxCount'],
        'maxDate': !exists(json, 'maxDate') ? undefined : (new Date(json['maxDate'])),
        'maxLength': !exists(json, 'maxLength') ? undefined : json['maxLength'],
        'maxValue': !exists(json, 'maxValue') ? undefined : json['maxValue'],
        'minCount': !exists(json, 'minCount') ? undefined : json['minCount'],
        'minDate': !exists(json, 'minDate') ? undefined : (new Date(json['minDate'])),
        'minLength': !exists(json, 'minLength') ? undefined : json['minLength'],
        'minValue': !exists(json, 'minValue') ? undefined : json['minValue'],
        'multiline': !exists(json, 'multiline') ? undefined : json['multiline'],
        'multivalued': !exists(json, 'multivalued') ? undefined : json['multivalued'],
        'pattern': !exists(json, 'pattern') ? undefined : json['pattern'],
        'publishState': !exists(json, 'publishState') ? undefined : json['publishState'],
        'quantityType': !exists(json, 'quantityType') ? undefined : json['quantityType'],
        'required': !exists(json, 'required') ? undefined : json['required'],
    };
}

export function BTCategoryPropertyConfigInfoToJSON(value?: BTCategoryPropertyConfigInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'computedAssemblyPropertyAggregatedPropertyId': value.computedAssemblyPropertyAggregatedPropertyId,
        'computedAssemblyPropertyAggregationOperator': value.computedAssemblyPropertyAggregationOperator,
        'computedAssemblyPropertyConfig': BTComputedAssemblyPropertyConfigToJSON(value.computedAssemblyPropertyConfig),
        'computedAssemblyPropertyErrorValuePolicy': value.computedAssemblyPropertyErrorValuePolicy,
        'computedAssemblyPropertyFilterInverted': value.computedAssemblyPropertyFilterInverted,
        'computedAssemblyPropertyFilterPropertyId': value.computedAssemblyPropertyFilterPropertyId,
        'computedAssemblyPropertyMissingValuePolicy': value.computedAssemblyPropertyMissingValuePolicy,
        'computedAssemblyPropertySecondaryPropertyId': value.computedAssemblyPropertySecondaryPropertyId,
        'computedPartPropertyConfig': BTComputedPartPropertyConfigToJSON(value.computedPartPropertyConfig),
        'computedPropertyFunctionName': value.computedPropertyFunctionName,
        'computedPropertyFunctionNamespace': value.computedPropertyFunctionNamespace,
        'computedPropertyFunctionURL': value.computedPropertyFunctionURL,
        'defaultValue': value.defaultValue,
        'displayName': value.displayName,
        'enumValues': value.enumValues === undefined ? undefined : ((value.enumValues as Array<any>).map(BTMetadataEnumValueToJSON)),
        'maxCount': value.maxCount,
        'maxDate': value.maxDate === undefined ? undefined : (value.maxDate.toISOString()),
        'maxLength': value.maxLength,
        'maxValue': value.maxValue,
        'minCount': value.minCount,
        'minDate': value.minDate === undefined ? undefined : (value.minDate.toISOString()),
        'minLength': value.minLength,
        'minValue': value.minValue,
        'multiline': value.multiline,
        'multivalued': value.multivalued,
        'pattern': value.pattern,
        'publishState': value.publishState,
        'quantityType': value.quantityType,
        'required': value.required,
    };
}

