/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTBillOfMaterialsHeaderInfo } from './BTBillOfMaterialsHeaderInfo';
import {
    BTBillOfMaterialsHeaderInfoFromJSON,
    BTBillOfMaterialsHeaderInfoFromJSONTyped,
    BTBillOfMaterialsHeaderInfoToJSON,
} from './BTBillOfMaterialsHeaderInfo';
import type { BTBillOfMaterialsRowInfo } from './BTBillOfMaterialsRowInfo';
import {
    BTBillOfMaterialsRowInfoFromJSON,
    BTBillOfMaterialsRowInfoFromJSONTyped,
    BTBillOfMaterialsRowInfoToJSON,
} from './BTBillOfMaterialsRowInfo';
import type { BTBillOfMaterialsSourceInfo } from './BTBillOfMaterialsSourceInfo';
import {
    BTBillOfMaterialsSourceInfoFromJSON,
    BTBillOfMaterialsSourceInfoFromJSONTyped,
    BTBillOfMaterialsSourceInfoToJSON,
} from './BTBillOfMaterialsSourceInfo';

/**
 * 
 * @export
 * @interface BTBillOfMaterialsInfo
 */
export interface BTBillOfMaterialsInfo {
    /**
     * 
     * @type {BTBillOfMaterialsSourceInfo}
     * @memberof BTBillOfMaterialsInfo
     */
    bomSource?: BTBillOfMaterialsSourceInfo;
    /**
     * 
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    formatVersion?: string;
    /**
     * 
     * @type {Array<BTBillOfMaterialsHeaderInfo>}
     * @memberof BTBillOfMaterialsInfo
     */
    headers?: Array<BTBillOfMaterialsHeaderInfo>;
    /**
     * URI to fetch complete information of the resource.
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    href?: string;
    /**
     * Id of the resource.
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    id?: string;
    /**
     * Name of the resource.
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    name?: string;
    /**
     * 
     * @type {Array<BTBillOfMaterialsRowInfo>}
     * @memberof BTBillOfMaterialsInfo
     */
    rows?: Array<BTBillOfMaterialsRowInfo>;
    /**
     * 
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    templateId?: string;
    /**
     * 
     * @type {BTBillOfMaterialsRowInfo}
     * @memberof BTBillOfMaterialsInfo
     */
    topLevelAssemblyRow?: BTBillOfMaterialsRowInfo;
    /**
     * 
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    type?: string;
    /**
     * URI to visualize the resource in a webclient if applicable.
     * @type {string}
     * @memberof BTBillOfMaterialsInfo
     */
    viewRef?: string;
}

/**
 * Check if a given object implements the BTBillOfMaterialsInfo interface.
 */
export function instanceOfBTBillOfMaterialsInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTBillOfMaterialsInfoFromJSON(json: any): BTBillOfMaterialsInfo {
    return BTBillOfMaterialsInfoFromJSONTyped(json, false);
}

export function BTBillOfMaterialsInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTBillOfMaterialsInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bomSource': !exists(json, 'bomSource') ? undefined : BTBillOfMaterialsSourceInfoFromJSON(json['bomSource']),
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'formatVersion': !exists(json, 'formatVersion') ? undefined : json['formatVersion'],
        'headers': !exists(json, 'headers') ? undefined : ((json['headers'] as Array<any>).map(BTBillOfMaterialsHeaderInfoFromJSON)),
        'href': !exists(json, 'href') ? undefined : json['href'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'rows': !exists(json, 'rows') ? undefined : ((json['rows'] as Array<any>).map(BTBillOfMaterialsRowInfoFromJSON)),
        'templateId': !exists(json, 'templateId') ? undefined : json['templateId'],
        'topLevelAssemblyRow': !exists(json, 'topLevelAssemblyRow') ? undefined : BTBillOfMaterialsRowInfoFromJSON(json['topLevelAssemblyRow']),
        'type': !exists(json, 'type') ? undefined : json['type'],
        'viewRef': !exists(json, 'viewRef') ? undefined : json['viewRef'],
    };
}

export function BTBillOfMaterialsInfoToJSON(value?: BTBillOfMaterialsInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bomSource': BTBillOfMaterialsSourceInfoToJSON(value.bomSource),
        'createdAt': value.createdAt,
        'formatVersion': value.formatVersion,
        'headers': value.headers === undefined ? undefined : ((value.headers as Array<any>).map(BTBillOfMaterialsHeaderInfoToJSON)),
        'href': value.href,
        'id': value.id,
        'name': value.name,
        'rows': value.rows === undefined ? undefined : ((value.rows as Array<any>).map(BTBillOfMaterialsRowInfoToJSON)),
        'templateId': value.templateId,
        'topLevelAssemblyRow': BTBillOfMaterialsRowInfoToJSON(value.topLevelAssemblyRow),
        'type': value.type,
        'viewRef': value.viewRef,
    };
}

