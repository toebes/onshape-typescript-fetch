/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
     BTSketchArcDisplayData349FromJSONTyped,
    BTSketchArcDisplayData349ToJSON,
     BTSketchCircleDisplayData350FromJSONTyped,
    BTSketchCircleDisplayData350ToJSON,
     BTSketchCompositeEntityDisplayData1093FromJSONTyped,
    BTSketchCompositeEntityDisplayData1093ToJSON,
     BTSketchConicDisplayData1085FromJSONTyped,
    BTSketchConicDisplayData1085ToJSON,
     BTSketchEllipseDisplayData712FromJSONTyped,
    BTSketchEllipseDisplayData712ToJSON,
     BTSketchEllipticalArcDisplayData892FromJSONTyped,
    BTSketchEllipticalArcDisplayData892ToJSON,
     BTSketchLineDisplayData357FromJSONTyped,
    BTSketchLineDisplayData357ToJSON,
     BTSketchPointDisplayData358FromJSONTyped,
    BTSketchPointDisplayData358ToJSON,
     BTSketchSplineDisplayData359FromJSONTyped,
    BTSketchSplineDisplayData359ToJSON
} from './';

/**
 * 
 * @export
 * @interface BTSketchEntityDisplayData354
 */
export interface BTSketchEntityDisplayData354 {
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTSketchEntityDisplayData354
     */
    btType?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof BTSketchEntityDisplayData354
     */
    points?: Array<number>;
}

/**
 * Check if a given object implements the BTSketchEntityDisplayData354 interface.
 */
export function instanceOfBTSketchEntityDisplayData354(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTSketchEntityDisplayData354FromJSON(json: any): BTSketchEntityDisplayData354 {
    return BTSketchEntityDisplayData354FromJSONTyped(json, false);
}

export function BTSketchEntityDisplayData354FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTSketchEntityDisplayData354 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['btType'] === 'BTSketchArcDisplayData-349') {
            return BTSketchArcDisplayData349FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchCircleDisplayData-350') {
            return BTSketchCircleDisplayData350FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchCompositeEntityDisplayData-1093') {
            return BTSketchCompositeEntityDisplayData1093FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchConicDisplayData-1085') {
            return BTSketchConicDisplayData1085FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchEllipseDisplayData-712') {
            return BTSketchEllipseDisplayData712FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchEllipticalArcDisplayData-892') {
            return BTSketchEllipticalArcDisplayData892FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchLineDisplayData-357') {
            return BTSketchLineDisplayData357FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchPointDisplayData-358') {
            return BTSketchPointDisplayData358FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTSketchSplineDisplayData-359') {
            return BTSketchSplineDisplayData359FromJSONTyped(json, true);
        }
    }
    return {
        
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'points': !exists(json, 'points') ? undefined : json['points'],
    };
}

export function BTSketchEntityDisplayData354SuperToJSON(value?: BTSketchEntityDisplayData354 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'btType': value.btType,
        'points': value.points,
    };
}



export function BTSketchEntityDisplayData354ToJSON(value?: BTSketchEntityDisplayData354 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (value.btType === 'BTSketchArcDisplayData-349') {
        return BTSketchArcDisplayData349ToJSON(value);
    }
    if (value.btType === 'BTSketchCircleDisplayData-350') {
        return BTSketchCircleDisplayData350ToJSON(value);
    }
    if (value.btType === 'BTSketchCompositeEntityDisplayData-1093') {
        return BTSketchCompositeEntityDisplayData1093ToJSON(value);
    }
    if (value.btType === 'BTSketchConicDisplayData-1085') {
        return BTSketchConicDisplayData1085ToJSON(value);
    }
    if (value.btType === 'BTSketchEllipseDisplayData-712') {
        return BTSketchEllipseDisplayData712ToJSON(value);
    }
    if (value.btType === 'BTSketchEllipticalArcDisplayData-892') {
        return BTSketchEllipticalArcDisplayData892ToJSON(value);
    }
    if (value.btType === 'BTSketchLineDisplayData-357') {
        return BTSketchLineDisplayData357ToJSON(value);
    }
    if (value.btType === 'BTSketchPointDisplayData-358') {
        return BTSketchPointDisplayData358ToJSON(value);
    }
    if (value.btType === 'BTSketchSplineDisplayData-359') {
        return BTSketchSplineDisplayData359ToJSON(value);
    }
    return BTSketchEntityDisplayData354SuperToJSON(value);
}
