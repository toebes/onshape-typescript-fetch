/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTBaseInfo } from './BTBaseInfo';
import {
    BTBaseInfoFromJSON,
    BTBaseInfoFromJSONTyped,
    BTBaseInfoToJSON,
} from './BTBaseInfo';
import type { BTDocumentLabelInfo } from './BTDocumentLabelInfo';
import {
    BTDocumentLabelInfoFromJSON,
    BTDocumentLabelInfoFromJSONTyped,
    BTDocumentLabelInfoToJSON,
} from './BTDocumentLabelInfo';
import type { BTOldPermission } from './BTOldPermission';
import {
    BTOldPermissionFromJSON,
    BTOldPermissionFromJSONTyped,
    BTOldPermissionToJSON,
} from './BTOldPermission';
import type { BTOwnerInfo } from './BTOwnerInfo';
import {
    BTOwnerInfoFromJSON,
    BTOwnerInfoFromJSONTyped,
    BTOwnerInfoToJSON,
} from './BTOwnerInfo';
import type { BTThumbnailInfo } from './BTThumbnailInfo';
import {
    BTThumbnailInfoFromJSON,
    BTThumbnailInfoFromJSONTyped,
    BTThumbnailInfoToJSON,
} from './BTThumbnailInfo';
import type { BTUserBasicSummaryInfo } from './BTUserBasicSummaryInfo';
import {
    BTUserBasicSummaryInfoFromJSON,
    BTUserBasicSummaryInfoFromJSONTyped,
    BTUserBasicSummaryInfoToJSON,
} from './BTUserBasicSummaryInfo';
import type { BTVersionGraphMode } from './BTVersionGraphMode';
import {
    BTVersionGraphModeFromJSON,
    BTVersionGraphModeFromJSONTyped,
    BTVersionGraphModeToJSON,
} from './BTVersionGraphMode';
import type { BTWorkspaceInfo } from './BTWorkspaceInfo';
import {
    BTWorkspaceInfoFromJSON,
    BTWorkspaceInfoFromJSONTyped,
    BTWorkspaceInfoToJSON,
} from './BTWorkspaceInfo';

/**
 * 
 * @export
 * @interface BTDocumentInfoAllOf
 */
export interface BTDocumentInfoAllOf {
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    anonymousAccessAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    anonymousAllowsExport?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    canMove?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    canUnshare?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof BTDocumentInfoAllOf
     */
    createdAt?: Date;
    /**
     * 
     * @type {BTUserBasicSummaryInfo}
     * @memberof BTDocumentInfoAllOf
     */
    createdBy?: BTUserBasicSummaryInfo;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    createdWithEducationPlan?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    defaultElementId?: string;
    /**
     * 
     * @type {BTVersionGraphMode}
     * @memberof BTDocumentInfoAllOf
     */
    defaultVersionGraphMode?: BTVersionGraphMode;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    defaultVersionGraphShowAutoVersions?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    defaultVersionGraphShowMerges?: boolean;
    /**
     * 
     * @type {BTWorkspaceInfo}
     * @memberof BTDocumentInfoAllOf
     */
    defaultWorkspace?: BTWorkspaceInfo;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    description?: string;
    /**
     * 
     * @type {Array<BTDocumentLabelInfo>}
     * @memberof BTDocumentInfoAllOf
     */
    documentLabels?: Array<BTDocumentLabelInfo>;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    documentThumbnailElementId?: string;
    /**
     * 
     * @type {number}
     * @memberof BTDocumentInfoAllOf
     */
    documentType?: number;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    duplicateNameViolationError?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    forceExportRules?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    hasReleaseRevisionableObjects?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    hasRelevantInsertables?: boolean;
    /**
     * URI to fetch complete information of the resource.
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    href?: string;
    /**
     * Id of the resource.
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    isContainer?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    isEnterpriseOwned?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    isMutable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    isOrphaned?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    isUpgradedToLatestVersion?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    isUsingManagedWorkflow?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    likedByCurrentUser?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BTDocumentInfoAllOf
     */
    likes?: number;
    /**
     * 
     * @type {Date}
     * @memberof BTDocumentInfoAllOf
     */
    modifiedAt?: Date;
    /**
     * 
     * @type {BTUserBasicSummaryInfo}
     * @memberof BTDocumentInfoAllOf
     */
    modifiedBy?: BTUserBasicSummaryInfo;
    /**
     * Name of the resource.
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    notRevisionManaged?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    notes?: string;
    /**
     * 
     * @type {number}
     * @memberof BTDocumentInfoAllOf
     */
    numberOfTimesCopied?: number;
    /**
     * 
     * @type {number}
     * @memberof BTDocumentInfoAllOf
     */
    numberOfTimesReferenced?: number;
    /**
     * 
     * @type {BTOwnerInfo}
     * @memberof BTDocumentInfoAllOf
     */
    owner?: BTOwnerInfo;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    parentId?: string;
    /**
     * 
     * @type {BTOldPermission}
     * @memberof BTDocumentInfoAllOf
     */
    permission?: BTOldPermission;
    /**
     * 
     * @type {Array<string>}
     * @memberof BTDocumentInfoAllOf
     */
    permissionSet?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    projectId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    _public?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    publishedVersionId?: string;
    /**
     * 
     * @type {BTBaseInfo}
     * @memberof BTDocumentInfoAllOf
     */
    recentVersion?: BTBaseInfo;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    resourceType?: string;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    sequence?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    supportTeamUserAndShared?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof BTDocumentInfoAllOf
     */
    tags?: Array<string>;
    /**
     * 
     * @type {BTThumbnailInfo}
     * @memberof BTDocumentInfoAllOf
     */
    thumbnail?: BTThumbnailInfo;
    /**
     * 
     * @type {number}
     * @memberof BTDocumentInfoAllOf
     */
    totalWorkspacesScheduledForUpdate?: number;
    /**
     * 
     * @type {number}
     * @memberof BTDocumentInfoAllOf
     */
    totalWorkspacesUpdating?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    tracingEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    trash?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof BTDocumentInfoAllOf
     */
    trashedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    treeHref?: string;
    /**
     * 
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    unparentHref?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTDocumentInfoAllOf
     */
    userAccountLimitsBreached?: boolean;
    /**
     * URI to visualize the resource in a webclient if applicable.
     * @type {string}
     * @memberof BTDocumentInfoAllOf
     */
    viewRef?: string;
}

/**
 * Check if a given object implements the BTDocumentInfoAllOf interface.
 */
export function instanceOfBTDocumentInfoAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTDocumentInfoAllOfFromJSON(json: any): BTDocumentInfoAllOf {
    return BTDocumentInfoAllOfFromJSONTyped(json, false);
}

export function BTDocumentInfoAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTDocumentInfoAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'anonymousAccessAllowed': !exists(json, 'anonymousAccessAllowed') ? undefined : json['anonymousAccessAllowed'],
        'anonymousAllowsExport': !exists(json, 'anonymousAllowsExport') ? undefined : json['anonymousAllowsExport'],
        'canMove': !exists(json, 'canMove') ? undefined : json['canMove'],
        'canUnshare': !exists(json, 'canUnshare') ? undefined : json['canUnshare'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'createdBy': !exists(json, 'createdBy') ? undefined : BTUserBasicSummaryInfoFromJSON(json['createdBy']),
        'createdWithEducationPlan': !exists(json, 'createdWithEducationPlan') ? undefined : json['createdWithEducationPlan'],
        'defaultElementId': !exists(json, 'defaultElementId') ? undefined : json['defaultElementId'],
        'defaultVersionGraphMode': !exists(json, 'defaultVersionGraphMode') ? undefined : BTVersionGraphModeFromJSON(json['defaultVersionGraphMode']),
        'defaultVersionGraphShowAutoVersions': !exists(json, 'defaultVersionGraphShowAutoVersions') ? undefined : json['defaultVersionGraphShowAutoVersions'],
        'defaultVersionGraphShowMerges': !exists(json, 'defaultVersionGraphShowMerges') ? undefined : json['defaultVersionGraphShowMerges'],
        'defaultWorkspace': !exists(json, 'defaultWorkspace') ? undefined : BTWorkspaceInfoFromJSON(json['defaultWorkspace']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'documentLabels': !exists(json, 'documentLabels') ? undefined : ((json['documentLabels'] as Array<any>).map(BTDocumentLabelInfoFromJSON)),
        'documentThumbnailElementId': !exists(json, 'documentThumbnailElementId') ? undefined : json['documentThumbnailElementId'],
        'documentType': !exists(json, 'documentType') ? undefined : json['documentType'],
        'duplicateNameViolationError': !exists(json, 'duplicateNameViolationError') ? undefined : json['duplicateNameViolationError'],
        'forceExportRules': !exists(json, 'forceExportRules') ? undefined : json['forceExportRules'],
        'hasReleaseRevisionableObjects': !exists(json, 'hasReleaseRevisionableObjects') ? undefined : json['hasReleaseRevisionableObjects'],
        'hasRelevantInsertables': !exists(json, 'hasRelevantInsertables') ? undefined : json['hasRelevantInsertables'],
        'href': !exists(json, 'href') ? undefined : json['href'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isContainer': !exists(json, 'isContainer') ? undefined : json['isContainer'],
        'isEnterpriseOwned': !exists(json, 'isEnterpriseOwned') ? undefined : json['isEnterpriseOwned'],
        'isMutable': !exists(json, 'isMutable') ? undefined : json['isMutable'],
        'isOrphaned': !exists(json, 'isOrphaned') ? undefined : json['isOrphaned'],
        'isUpgradedToLatestVersion': !exists(json, 'isUpgradedToLatestVersion') ? undefined : json['isUpgradedToLatestVersion'],
        'isUsingManagedWorkflow': !exists(json, 'isUsingManagedWorkflow') ? undefined : json['isUsingManagedWorkflow'],
        'likedByCurrentUser': !exists(json, 'likedByCurrentUser') ? undefined : json['likedByCurrentUser'],
        'likes': !exists(json, 'likes') ? undefined : json['likes'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
        'modifiedBy': !exists(json, 'modifiedBy') ? undefined : BTUserBasicSummaryInfoFromJSON(json['modifiedBy']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'notRevisionManaged': !exists(json, 'notRevisionManaged') ? undefined : json['notRevisionManaged'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'numberOfTimesCopied': !exists(json, 'numberOfTimesCopied') ? undefined : json['numberOfTimesCopied'],
        'numberOfTimesReferenced': !exists(json, 'numberOfTimesReferenced') ? undefined : json['numberOfTimesReferenced'],
        'owner': !exists(json, 'owner') ? undefined : BTOwnerInfoFromJSON(json['owner']),
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'permission': !exists(json, 'permission') ? undefined : BTOldPermissionFromJSON(json['permission']),
        'permissionSet': !exists(json, 'permissionSet') ? undefined : json['permissionSet'],
        'projectId': !exists(json, 'projectId') ? undefined : json['projectId'],
        '_public': !exists(json, 'public') ? undefined : json['public'],
        'publishedVersionId': !exists(json, 'publishedVersionId') ? undefined : json['publishedVersionId'],
        'recentVersion': !exists(json, 'recentVersion') ? undefined : BTBaseInfoFromJSON(json['recentVersion']),
        'resourceType': !exists(json, 'resourceType') ? undefined : json['resourceType'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'supportTeamUserAndShared': !exists(json, 'supportTeamUserAndShared') ? undefined : json['supportTeamUserAndShared'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'thumbnail': !exists(json, 'thumbnail') ? undefined : BTThumbnailInfoFromJSON(json['thumbnail']),
        'totalWorkspacesScheduledForUpdate': !exists(json, 'totalWorkspacesScheduledForUpdate') ? undefined : json['totalWorkspacesScheduledForUpdate'],
        'totalWorkspacesUpdating': !exists(json, 'totalWorkspacesUpdating') ? undefined : json['totalWorkspacesUpdating'],
        'tracingEnabled': !exists(json, 'tracingEnabled') ? undefined : json['tracingEnabled'],
        'trash': !exists(json, 'trash') ? undefined : json['trash'],
        'trashedAt': !exists(json, 'trashedAt') ? undefined : (new Date(json['trashedAt'])),
        'treeHref': !exists(json, 'treeHref') ? undefined : json['treeHref'],
        'unparentHref': !exists(json, 'unparentHref') ? undefined : json['unparentHref'],
        'userAccountLimitsBreached': !exists(json, 'userAccountLimitsBreached') ? undefined : json['userAccountLimitsBreached'],
        'viewRef': !exists(json, 'viewRef') ? undefined : json['viewRef'],
    };
}

export function BTDocumentInfoAllOfToJSON(value?: BTDocumentInfoAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'anonymousAccessAllowed': value.anonymousAccessAllowed,
        'anonymousAllowsExport': value.anonymousAllowsExport,
        'canMove': value.canMove,
        'canUnshare': value.canUnshare,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'createdBy': BTUserBasicSummaryInfoToJSON(value.createdBy),
        'createdWithEducationPlan': value.createdWithEducationPlan,
        'defaultElementId': value.defaultElementId,
        'defaultVersionGraphMode': BTVersionGraphModeToJSON(value.defaultVersionGraphMode),
        'defaultVersionGraphShowAutoVersions': value.defaultVersionGraphShowAutoVersions,
        'defaultVersionGraphShowMerges': value.defaultVersionGraphShowMerges,
        'defaultWorkspace': BTWorkspaceInfoToJSON(value.defaultWorkspace),
        'description': value.description,
        'documentLabels': value.documentLabels === undefined ? undefined : ((value.documentLabels as Array<any>).map(BTDocumentLabelInfoToJSON)),
        'documentThumbnailElementId': value.documentThumbnailElementId,
        'documentType': value.documentType,
        'duplicateNameViolationError': value.duplicateNameViolationError,
        'forceExportRules': value.forceExportRules,
        'hasReleaseRevisionableObjects': value.hasReleaseRevisionableObjects,
        'hasRelevantInsertables': value.hasRelevantInsertables,
        'href': value.href,
        'id': value.id,
        'isContainer': value.isContainer,
        'isEnterpriseOwned': value.isEnterpriseOwned,
        'isMutable': value.isMutable,
        'isOrphaned': value.isOrphaned,
        'isUpgradedToLatestVersion': value.isUpgradedToLatestVersion,
        'isUsingManagedWorkflow': value.isUsingManagedWorkflow,
        'likedByCurrentUser': value.likedByCurrentUser,
        'likes': value.likes,
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
        'modifiedBy': BTUserBasicSummaryInfoToJSON(value.modifiedBy),
        'name': value.name,
        'notRevisionManaged': value.notRevisionManaged,
        'notes': value.notes,
        'numberOfTimesCopied': value.numberOfTimesCopied,
        'numberOfTimesReferenced': value.numberOfTimesReferenced,
        'owner': BTOwnerInfoToJSON(value.owner),
        'parentId': value.parentId,
        'permission': BTOldPermissionToJSON(value.permission),
        'permissionSet': value.permissionSet,
        'projectId': value.projectId,
        'public': value._public,
        'publishedVersionId': value.publishedVersionId,
        'recentVersion': BTBaseInfoToJSON(value.recentVersion),
        'resourceType': value.resourceType,
        'sequence': value.sequence,
        'supportTeamUserAndShared': value.supportTeamUserAndShared,
        'tags': value.tags,
        'thumbnail': BTThumbnailInfoToJSON(value.thumbnail),
        'totalWorkspacesScheduledForUpdate': value.totalWorkspacesScheduledForUpdate,
        'totalWorkspacesUpdating': value.totalWorkspacesUpdating,
        'tracingEnabled': value.tracingEnabled,
        'trash': value.trash,
        'trashedAt': value.trashedAt === undefined ? undefined : (value.trashedAt.toISOString()),
        'treeHref': value.treeHref,
        'unparentHref': value.unparentHref,
        'userAccountLimitsBreached': value.userAccountLimitsBreached,
        'viewRef': value.viewRef,
    };
}

