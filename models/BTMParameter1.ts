/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
     BTMDatabaseParameter2229FromJSONTyped,
    BTMDatabaseParameter2229ToJSON,
     BTMParameterAppearance627FromJSONTyped,
    BTMParameterAppearance627ToJSON,
     BTMParameterArray2025FromJSONTyped,
    BTMParameterArray2025ToJSON,
     BTMParameterBlobReference1679FromJSONTyped,
    BTMParameterBlobReference1679ToJSON,
     BTMParameterBoolean144FromJSONTyped,
    BTMParameterBoolean144ToJSON,
     BTMParameterButton5169FromJSONTyped,
    BTMParameterButton5169ToJSON,
     BTMParameterConfigured2222FromJSONTyped,
    BTMParameterConfigured2222ToJSON,
     BTMParameterDerived864FromJSONTyped,
    BTMParameterDerived864ToJSON,
     BTMParameterEnum145FromJSONTyped,
    BTMParameterEnum145ToJSON,
     BTMParameterFeatureList1749FromJSONTyped,
    BTMParameterFeatureList1749ToJSON,
     BTMParameterForeignId146FromJSONTyped,
    BTMParameterForeignId146ToJSON,
     BTMParameterInvalid1664FromJSONTyped,
    BTMParameterInvalid1664ToJSON,
     BTMParameterLookupTablePath1419FromJSONTyped,
    BTMParameterLookupTablePath1419ToJSON,
     BTMParameterMaterial1388FromJSONTyped,
    BTMParameterMaterial1388ToJSON,
     BTMParameterMultiEnum3411FromJSONTyped,
    BTMParameterMultiEnum3411ToJSON,
     BTMParameterQuantity147FromJSONTyped,
    BTMParameterQuantity147ToJSON,
     BTMParameterQueryList148FromJSONTyped,
    BTMParameterQueryList148ToJSON,
     BTMParameterQueryWithOccurrenceList67FromJSONTyped,
    BTMParameterQueryWithOccurrenceList67ToJSON,
     BTMParameterReference2434FromJSONTyped,
    BTMParameterReference2434ToJSON,
     BTMParameterString149FromJSONTyped,
    BTMParameterString149ToJSON,
     BTMReadOnlyParameter3800FromJSONTyped,
    BTMReadOnlyParameter3800ToJSON
} from './';

/**
 * A list of parameter values for instantiation of the feature spec. Parameters are present for all defined parameters, even if not used in a specific instantiation.
 * @export
 * @interface BTMParameter1
 */
export interface BTMParameter1 {
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTMParameter1
     */
    btType?: string;
    /**
     * Microversion that resulted from the import.
     * @type {string}
     * @memberof BTMParameter1
     */
    importMicroversion?: string;
    /**
     * ID of the parameter's node.
     * @type {string}
     * @memberof BTMParameter1
     */
    nodeId?: string;
    /**
     * Unique ID of the parameter.
     * @type {string}
     * @memberof BTMParameter1
     */
    parameterId?: string;
}

/**
 * Check if a given object implements the BTMParameter1 interface.
 */
export function instanceOfBTMParameter1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTMParameter1FromJSON(json: any): BTMParameter1 {
    return BTMParameter1FromJSONTyped(json, false);
}

export function BTMParameter1FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTMParameter1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['btType'] === 'BTMDatabaseParameter-2229') {
            return BTMDatabaseParameter2229FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterAppearance-627') {
            return BTMParameterAppearance627FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterArray-2025') {
            return BTMParameterArray2025FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterBlobReference-1679') {
            return BTMParameterBlobReference1679FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterBoolean-144') {
            return BTMParameterBoolean144FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterButton-5169') {
            return BTMParameterButton5169FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterConfigured-2222') {
            return BTMParameterConfigured2222FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterDerived-864') {
            return BTMParameterDerived864FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterEnum-145') {
            return BTMParameterEnum145FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterFeatureList-1749') {
            return BTMParameterFeatureList1749FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterForeignId-146') {
            return BTMParameterForeignId146FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterInvalid-1664') {
            return BTMParameterInvalid1664FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterLookupTablePath-1419') {
            return BTMParameterLookupTablePath1419FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterMaterial-1388') {
            return BTMParameterMaterial1388FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterMultiEnum-3411') {
            return BTMParameterMultiEnum3411FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterQuantity-147') {
            return BTMParameterQuantity147FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterQueryList-148') {
            return BTMParameterQueryList148FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterQueryWithOccurrenceList-67') {
            return BTMParameterQueryWithOccurrenceList67FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterReference-2434') {
            return BTMParameterReference2434FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMParameterString-149') {
            return BTMParameterString149FromJSONTyped(json, true);
        }
        if (json['btType'] === 'BTMReadOnlyParameter-3800') {
            return BTMReadOnlyParameter3800FromJSONTyped(json, true);
        }
    }
    return {
        
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'importMicroversion': !exists(json, 'importMicroversion') ? undefined : json['importMicroversion'],
        'nodeId': !exists(json, 'nodeId') ? undefined : json['nodeId'],
        'parameterId': !exists(json, 'parameterId') ? undefined : json['parameterId'],
    };
}

export function BTMParameter1SuperToJSON(value?: BTMParameter1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'btType': value.btType,
        'importMicroversion': value.importMicroversion,
        'nodeId': value.nodeId,
        'parameterId': value.parameterId,
    };
}



export function BTMParameter1ToJSON(value?: BTMParameter1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (value.btType === 'BTMDatabaseParameter-2229') {
        return BTMDatabaseParameter2229ToJSON(value);
    }
    if (value.btType === 'BTMParameterAppearance-627') {
        return BTMParameterAppearance627ToJSON(value);
    }
    if (value.btType === 'BTMParameterArray-2025') {
        return BTMParameterArray2025ToJSON(value);
    }
    if (value.btType === 'BTMParameterBlobReference-1679') {
        return BTMParameterBlobReference1679ToJSON(value);
    }
    if (value.btType === 'BTMParameterBoolean-144') {
        return BTMParameterBoolean144ToJSON(value);
    }
    if (value.btType === 'BTMParameterButton-5169') {
        return BTMParameterButton5169ToJSON(value);
    }
    if (value.btType === 'BTMParameterConfigured-2222') {
        return BTMParameterConfigured2222ToJSON(value);
    }
    if (value.btType === 'BTMParameterDerived-864') {
        return BTMParameterDerived864ToJSON(value);
    }
    if (value.btType === 'BTMParameterEnum-145') {
        return BTMParameterEnum145ToJSON(value);
    }
    if (value.btType === 'BTMParameterFeatureList-1749') {
        return BTMParameterFeatureList1749ToJSON(value);
    }
    if (value.btType === 'BTMParameterForeignId-146') {
        return BTMParameterForeignId146ToJSON(value);
    }
    if (value.btType === 'BTMParameterInvalid-1664') {
        return BTMParameterInvalid1664ToJSON(value);
    }
    if (value.btType === 'BTMParameterLookupTablePath-1419') {
        return BTMParameterLookupTablePath1419ToJSON(value);
    }
    if (value.btType === 'BTMParameterMaterial-1388') {
        return BTMParameterMaterial1388ToJSON(value);
    }
    if (value.btType === 'BTMParameterMultiEnum-3411') {
        return BTMParameterMultiEnum3411ToJSON(value);
    }
    if (value.btType === 'BTMParameterQuantity-147') {
        return BTMParameterQuantity147ToJSON(value);
    }
    if (value.btType === 'BTMParameterQueryList-148') {
        return BTMParameterQueryList148ToJSON(value);
    }
    if (value.btType === 'BTMParameterQueryWithOccurrenceList-67') {
        return BTMParameterQueryWithOccurrenceList67ToJSON(value);
    }
    if (value.btType === 'BTMParameterReference-2434') {
        return BTMParameterReference2434ToJSON(value);
    }
    if (value.btType === 'BTMParameterString-149') {
        return BTMParameterString149ToJSON(value);
    }
    if (value.btType === 'BTMReadOnlyParameter-3800') {
        return BTMReadOnlyParameter3800ToJSON(value);
    }
    return BTMParameter1SuperToJSON(value);
}
