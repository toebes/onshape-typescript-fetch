/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTBillingPlanInfo } from './BTBillingPlanInfo';
import {
    BTBillingPlanInfoFromJSON,
    BTBillingPlanInfoFromJSONTyped,
    BTBillingPlanInfoToJSON,
} from './BTBillingPlanInfo';
import type { BTCompanySummaryInfo } from './BTCompanySummaryInfo';
import {
    BTCompanySummaryInfoFromJSON,
    BTCompanySummaryInfoFromJSONTyped,
    BTCompanySummaryInfoToJSON,
} from './BTCompanySummaryInfo';
import type { BTDeviceLoginSecretInfo } from './BTDeviceLoginSecretInfo';
import {
    BTDeviceLoginSecretInfoFromJSON,
    BTDeviceLoginSecretInfoFromJSONTyped,
    BTDeviceLoginSecretInfoToJSON,
} from './BTDeviceLoginSecretInfo';
import type { BTDiscount } from './BTDiscount';
import {
    BTDiscountFromJSON,
    BTDiscountFromJSONTyped,
    BTDiscountToJSON,
} from './BTDiscount';
import type { BTDiscountInfo } from './BTDiscountInfo';
import {
    BTDiscountInfoFromJSON,
    BTDiscountInfoFromJSONTyped,
    BTDiscountInfoToJSON,
} from './BTDiscountInfo';
import type { BTPrivacyConsentInfo } from './BTPrivacyConsentInfo';
import {
    BTPrivacyConsentInfoFromJSON,
    BTPrivacyConsentInfoFromJSONTyped,
    BTPrivacyConsentInfoToJSON,
} from './BTPrivacyConsentInfo';
import type { BTPurchaseInfo } from './BTPurchaseInfo';
import {
    BTPurchaseInfoFromJSON,
    BTPurchaseInfoFromJSONTyped,
    BTPurchaseInfoToJSON,
} from './BTPurchaseInfo';
import type { BTRole } from './BTRole';
import {
    BTRoleFromJSON,
    BTRoleFromJSONTyped,
    BTRoleToJSON,
} from './BTRole';
import type { BTSessionCredentialInfo } from './BTSessionCredentialInfo';
import {
    BTSessionCredentialInfoFromJSON,
    BTSessionCredentialInfoFromJSONTyped,
    BTSessionCredentialInfoToJSON,
} from './BTSessionCredentialInfo';
import type { BTTrialInfo } from './BTTrialInfo';
import {
    BTTrialInfoFromJSON,
    BTTrialInfoFromJSONTyped,
    BTTrialInfoToJSON,
} from './BTTrialInfo';
import type { BTUserInfo } from './BTUserInfo';
import {
    BTUserInfoFromJSON,
    BTUserInfoFromJSONTyped,
    BTUserInfoToJSON,
 BTUserInfoSuperToJSON,
} from './BTUserInfo';
import type { BTUserMetricsInfo } from './BTUserMetricsInfo';
import {
    BTUserMetricsInfoFromJSON,
    BTUserMetricsInfoFromJSONTyped,
    BTUserMetricsInfoToJSON,
} from './BTUserMetricsInfo';
import type { GlobalPermissionInfo } from './GlobalPermissionInfo';
import {
    GlobalPermissionInfoFromJSON,
    GlobalPermissionInfoFromJSONTyped,
    GlobalPermissionInfoToJSON,
} from './GlobalPermissionInfo';

/**
 * 
 * @export
 * @interface BTUserAdminInfo
 */
export interface BTUserAdminInfo extends BTUserInfo {
    /**
     * 
     * @type {BTDiscount}
     * @memberof BTUserAdminInfo
     */
    discount?: BTDiscount;
    /**
     * 
     * @type {string}
     * @memberof BTUserAdminInfo
     */
    invitationId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTUserAdminInfo
     */
    invitedByEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof BTUserAdminInfo
     */
    invitedDocumentId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTUserAdminInfo
     */
    isTrialRequest?: boolean;
    /**
     * 
     * @type {Array<BTPrivacyConsentInfo>}
     * @memberof BTUserAdminInfo
     */
    privacyConsents?: Array<BTPrivacyConsentInfo>;
    /**
     * 
     * @type {BTUserMetricsInfo}
     * @memberof BTUserAdminInfo
     */
    userMetrics?: BTUserMetricsInfo;
}

/**
 * Check if a given object implements the BTUserAdminInfo interface.
 */
export function instanceOfBTUserAdminInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTUserAdminInfoFromJSON(json: any): BTUserAdminInfo {
    return BTUserAdminInfoFromJSONTyped(json, false);
}

export function BTUserAdminInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTUserAdminInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...BTUserInfoFromJSONTyped(json, ignoreDiscriminator),
        'discount': !exists(json, 'discount') ? undefined : BTDiscountFromJSON(json['discount']),
        'invitationId': !exists(json, 'invitationId') ? undefined : json['invitationId'],
        'invitedByEmail': !exists(json, 'invitedByEmail') ? undefined : json['invitedByEmail'],
        'invitedDocumentId': !exists(json, 'invitedDocumentId') ? undefined : json['invitedDocumentId'],
        'isTrialRequest': !exists(json, 'isTrialRequest') ? undefined : json['isTrialRequest'],
        'privacyConsents': !exists(json, 'privacyConsents') ? undefined : ((json['privacyConsents'] as Array<any>).map(BTPrivacyConsentInfoFromJSON)),
        'userMetrics': !exists(json, 'userMetrics') ? undefined : BTUserMetricsInfoFromJSON(json['userMetrics']),
    };
}

export function BTUserAdminInfoToJSON(value?: BTUserAdminInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...BTUserInfoSuperToJSON(value),
        'discount': BTDiscountToJSON(value.discount),
        'invitationId': value.invitationId,
        'invitedByEmail': value.invitedByEmail,
        'invitedDocumentId': value.invitedDocumentId,
        'isTrialRequest': value.isTrialRequest,
        'privacyConsents': value.privacyConsents === undefined ? undefined : ((value.privacyConsents as Array<any>).map(BTPrivacyConsentInfoToJSON)),
        'userMetrics': BTUserMetricsInfoToJSON(value.userMetrics),
    };
}

