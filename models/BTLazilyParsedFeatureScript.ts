/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTMModel141 } from './BTMModel141';
import {
    BTMModel141FromJSON,
    BTMModel141FromJSONTyped,
    BTMModel141ToJSON,
} from './BTMModel141';
import type { BTMicroversionId366 } from './BTMicroversionId366';
import {
    BTMicroversionId366FromJSON,
    BTMicroversionId366FromJSONTyped,
    BTMicroversionId366ToJSON,
} from './BTMicroversionId366';
import type { BTPModule234 } from './BTPModule234';
import {
    BTPModule234FromJSON,
    BTPModule234FromJSONTyped,
    BTPModule234ToJSON,
} from './BTPModule234';
import type { BTPModuleId235 } from './BTPModuleId235';
import {
    BTPModuleId235FromJSON,
    BTPModuleId235FromJSONTyped,
    BTPModuleId235ToJSON,
} from './BTPModuleId235';
import type { BTUiFeatureStudioChecksum2438 } from './BTUiFeatureStudioChecksum2438';
import {
    BTUiFeatureStudioChecksum2438FromJSON,
    BTUiFeatureStudioChecksum2438FromJSONTyped,
    BTUiFeatureStudioChecksum2438ToJSON,
} from './BTUiFeatureStudioChecksum2438';

/**
 * 
 * @export
 * @interface BTLazilyParsedFeatureScript
 */
export interface BTLazilyParsedFeatureScript {
    /**
     * 
     * @type {BTUiFeatureStudioChecksum2438}
     * @memberof BTLazilyParsedFeatureScript
     */
    checksum?: BTUiFeatureStudioChecksum2438;
    /**
     * 
     * @type {number}
     * @memberof BTLazilyParsedFeatureScript
     */
    languageVersion?: number;
    /**
     * 
     * @type {object}
     * @memberof BTLazilyParsedFeatureScript
     */
    lines?: object;
    /**
     * 
     * @type {BTMModel141}
     * @memberof BTLazilyParsedFeatureScript
     */
    model?: BTMModel141;
    /**
     * 
     * @type {BTPModule234}
     * @memberof BTLazilyParsedFeatureScript
     */
    module?: BTPModule234;
    /**
     * 
     * @type {BTPModuleId235}
     * @memberof BTLazilyParsedFeatureScript
     */
    moduleId?: BTPModuleId235;
    /**
     * 
     * @type {BTPModuleId235}
     * @memberof BTLazilyParsedFeatureScript
     */
    noticeModuleIds?: BTPModuleId235;
    /**
     * 
     * @type {number}
     * @memberof BTLazilyParsedFeatureScript
     */
    parentLanguageVersion?: number;
    /**
     * 
     * @type {{ [key: string]: BTMicroversionId366; }}
     * @memberof BTLazilyParsedFeatureScript
     */
    references?: { [key: string]: BTMicroversionId366; };
    /**
     * 
     * @type {string}
     * @memberof BTLazilyParsedFeatureScript
     */
    source?: string;
}

/**
 * Check if a given object implements the BTLazilyParsedFeatureScript interface.
 */
export function instanceOfBTLazilyParsedFeatureScript(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTLazilyParsedFeatureScriptFromJSON(json: any): BTLazilyParsedFeatureScript {
    return BTLazilyParsedFeatureScriptFromJSONTyped(json, false);
}

export function BTLazilyParsedFeatureScriptFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTLazilyParsedFeatureScript {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checksum': !exists(json, 'checksum') ? undefined : BTUiFeatureStudioChecksum2438FromJSON(json['checksum']),
        'languageVersion': !exists(json, 'languageVersion') ? undefined : json['languageVersion'],
        'lines': !exists(json, 'lines') ? undefined : json['lines'],
        'model': !exists(json, 'model') ? undefined : BTMModel141FromJSON(json['model']),
        'module': !exists(json, 'module') ? undefined : BTPModule234FromJSON(json['module']),
        'moduleId': !exists(json, 'moduleId') ? undefined : BTPModuleId235FromJSON(json['moduleId']),
        'noticeModuleIds': !exists(json, 'noticeModuleIds') ? undefined : BTPModuleId235FromJSON(json['noticeModuleIds']),
        'parentLanguageVersion': !exists(json, 'parentLanguageVersion') ? undefined : json['parentLanguageVersion'],
        'references': !exists(json, 'references') ? undefined : (mapValues(json['references'], BTMicroversionId366FromJSON)),
        'source': !exists(json, 'source') ? undefined : json['source'],
    };
}

export function BTLazilyParsedFeatureScriptToJSON(value?: BTLazilyParsedFeatureScript | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checksum': BTUiFeatureStudioChecksum2438ToJSON(value.checksum),
        'languageVersion': value.languageVersion,
        'lines': value.lines,
        'model': BTMModel141ToJSON(value.model),
        'module': BTPModule234ToJSON(value.module),
        'moduleId': BTPModuleId235ToJSON(value.moduleId),
        'noticeModuleIds': BTPModuleId235ToJSON(value.noticeModuleIds),
        'parentLanguageVersion': value.parentLanguageVersion,
        'references': value.references === undefined ? undefined : (mapValues(value.references, BTMicroversionId366ToJSON)),
        'source': value.source,
    };
}

