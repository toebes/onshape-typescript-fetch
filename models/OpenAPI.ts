/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Components } from './Components';
import {
    ComponentsFromJSON,
    ComponentsFromJSONTyped,
    ComponentsToJSON,
} from './Components';
import type { ExternalDocumentation } from './ExternalDocumentation';
import {
    ExternalDocumentationFromJSON,
    ExternalDocumentationFromJSONTyped,
    ExternalDocumentationToJSON,
} from './ExternalDocumentation';
import type { Info } from './Info';
import {
    InfoFromJSON,
    InfoFromJSONTyped,
    InfoToJSON,
} from './Info';
import type { OpenAPIPaths } from './OpenAPIPaths';
import {
    OpenAPIPathsFromJSON,
    OpenAPIPathsFromJSONTyped,
    OpenAPIPathsToJSON,
} from './OpenAPIPaths';
import type { PathItem } from './PathItem';
import {
    PathItemFromJSON,
    PathItemFromJSONTyped,
    PathItemToJSON,
} from './PathItem';
import type { SecurityRequirement } from './SecurityRequirement';
import {
    SecurityRequirementFromJSON,
    SecurityRequirementFromJSONTyped,
    SecurityRequirementToJSON,
} from './SecurityRequirement';
import type { Server } from './Server';
import {
    ServerFromJSON,
    ServerFromJSONTyped,
    ServerToJSON,
} from './Server';
import type { Tag } from './Tag';
import {
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
} from './Tag';

/**
 * 
 * @export
 * @interface OpenAPI
 */
export interface OpenAPI {
    /**
     * 
     * @type {Components}
     * @memberof OpenAPI
     */
    components?: Components;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof OpenAPI
     */
    extensions?: { [key: string]: object; };
    /**
     * 
     * @type {ExternalDocumentation}
     * @memberof OpenAPI
     */
    externalDocs?: ExternalDocumentation;
    /**
     * 
     * @type {Info}
     * @memberof OpenAPI
     */
    info?: Info;
    /**
     * 
     * @type {string}
     * @memberof OpenAPI
     */
    jsonSchemaDialect?: string;
    /**
     * 
     * @type {string}
     * @memberof OpenAPI
     */
    openapi?: string;
    /**
     * 
     * @type {OpenAPIPaths}
     * @memberof OpenAPI
     */
    paths?: OpenAPIPaths;
    /**
     * 
     * @type {Array<SecurityRequirement>}
     * @memberof OpenAPI
     */
    security?: Array<SecurityRequirement>;
    /**
     * 
     * @type {Array<Server>}
     * @memberof OpenAPI
     */
    servers?: Array<Server>;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof OpenAPI
     */
    tags?: Array<Tag>;
    /**
     * 
     * @type {{ [key: string]: PathItem; }}
     * @memberof OpenAPI
     */
    webhooks?: { [key: string]: PathItem; };
}

/**
 * Check if a given object implements the OpenAPI interface.
 */
export function instanceOfOpenAPI(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OpenAPIFromJSON(json: any): OpenAPI {
    return OpenAPIFromJSONTyped(json, false);
}

export function OpenAPIFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenAPI {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'components': !exists(json, 'components') ? undefined : ComponentsFromJSON(json['components']),
        'extensions': !exists(json, 'extensions') ? undefined : json['extensions'],
        'externalDocs': !exists(json, 'externalDocs') ? undefined : ExternalDocumentationFromJSON(json['externalDocs']),
        'info': !exists(json, 'info') ? undefined : InfoFromJSON(json['info']),
        'jsonSchemaDialect': !exists(json, 'jsonSchemaDialect') ? undefined : json['jsonSchemaDialect'],
        'openapi': !exists(json, 'openapi') ? undefined : json['openapi'],
        'paths': !exists(json, 'paths') ? undefined : OpenAPIPathsFromJSON(json['paths']),
        'security': !exists(json, 'security') ? undefined : ((json['security'] as Array<any>).map(SecurityRequirementFromJSON)),
        'servers': !exists(json, 'servers') ? undefined : ((json['servers'] as Array<any>).map(ServerFromJSON)),
        'tags': !exists(json, 'tags') ? undefined : ((json['tags'] as Array<any>).map(TagFromJSON)),
        'webhooks': !exists(json, 'webhooks') ? undefined : (mapValues(json['webhooks'], PathItemFromJSON)),
    };
}

export function OpenAPIToJSON(value?: OpenAPI | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'components': ComponentsToJSON(value.components),
        'extensions': value.extensions,
        'externalDocs': ExternalDocumentationToJSON(value.externalDocs),
        'info': InfoToJSON(value.info),
        'jsonSchemaDialect': value.jsonSchemaDialect,
        'openapi': value.openapi,
        'paths': OpenAPIPathsToJSON(value.paths),
        'security': value.security === undefined ? undefined : ((value.security as Array<any>).map(SecurityRequirementToJSON)),
        'servers': value.servers === undefined ? undefined : ((value.servers as Array<any>).map(ServerToJSON)),
        'tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(TagToJSON)),
        'webhooks': value.webhooks === undefined ? undefined : (mapValues(value.webhooks, PathItemToJSON)),
    };
}

