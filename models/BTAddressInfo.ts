/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BTAddressInfo
 */
export interface BTAddressInfo {
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    countryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    stateCode?: string;
    /**
     * 
     * @type {string}
     * @memberof BTAddressInfo
     */
    zip?: string;
}

/**
 * Check if a given object implements the BTAddressInfo interface.
 */
export function instanceOfBTAddressInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTAddressInfoFromJSON(json: any): BTAddressInfo {
    return BTAddressInfoFromJSONTyped(json, false);
}

export function BTAddressInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTAddressInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': !exists(json, 'address') ? undefined : json['address'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'stateCode': !exists(json, 'stateCode') ? undefined : json['stateCode'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
    };
}

export function BTAddressInfoToJSON(value?: BTAddressInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'city': value.city,
        'country': value.country,
        'countryCode': value.countryCode,
        'id': value.id,
        'state': value.state,
        'stateCode': value.stateCode,
        'zip': value.zip,
    };
}

