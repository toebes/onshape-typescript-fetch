/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTBillOfMaterialsElementInfo } from './BTBillOfMaterialsElementInfo';
import {
    BTBillOfMaterialsElementInfoFromJSON,
    BTBillOfMaterialsElementInfoFromJSONTyped,
    BTBillOfMaterialsElementInfoToJSON,
} from './BTBillOfMaterialsElementInfo';
import type { BTBillOfMaterialsObjectWithPropertiesInfo } from './BTBillOfMaterialsObjectWithPropertiesInfo';
import {
    BTBillOfMaterialsObjectWithPropertiesInfoFromJSON,
    BTBillOfMaterialsObjectWithPropertiesInfoFromJSONTyped,
    BTBillOfMaterialsObjectWithPropertiesInfoToJSON,
} from './BTBillOfMaterialsObjectWithPropertiesInfo';
import type { BTThumbnailInfo } from './BTThumbnailInfo';
import {
    BTThumbnailInfoFromJSON,
    BTThumbnailInfoFromJSONTyped,
    BTThumbnailInfoToJSON,
} from './BTThumbnailInfo';

/**
 * 
 * @export
 * @interface BTBillOfMaterialsSourceInfo
 */
export interface BTBillOfMaterialsSourceInfo {
    /**
     * 
     * @type {BTBillOfMaterialsObjectWithPropertiesInfo}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    document?: BTBillOfMaterialsObjectWithPropertiesInfo;
    /**
     * 
     * @type {BTBillOfMaterialsObjectWithPropertiesInfo}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    documentMicroversion?: BTBillOfMaterialsObjectWithPropertiesInfo;
    /**
     * 
     * @type {BTBillOfMaterialsElementInfo}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    element?: BTBillOfMaterialsElementInfo;
    /**
     * 
     * @type {string}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    href?: string;
    /**
     * 
     * @type {BTThumbnailInfo}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    thumbnailInfo?: BTThumbnailInfo;
    /**
     * 
     * @type {BTBillOfMaterialsObjectWithPropertiesInfo}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    version?: BTBillOfMaterialsObjectWithPropertiesInfo;
    /**
     * 
     * @type {string}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    viewHref?: string;
    /**
     * 
     * @type {BTBillOfMaterialsObjectWithPropertiesInfo}
     * @memberof BTBillOfMaterialsSourceInfo
     */
    workspace?: BTBillOfMaterialsObjectWithPropertiesInfo;
}

/**
 * Check if a given object implements the BTBillOfMaterialsSourceInfo interface.
 */
export function instanceOfBTBillOfMaterialsSourceInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTBillOfMaterialsSourceInfoFromJSON(json: any): BTBillOfMaterialsSourceInfo {
    return BTBillOfMaterialsSourceInfoFromJSONTyped(json, false);
}

export function BTBillOfMaterialsSourceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTBillOfMaterialsSourceInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'document': !exists(json, 'document') ? undefined : BTBillOfMaterialsObjectWithPropertiesInfoFromJSON(json['document']),
        'documentMicroversion': !exists(json, 'documentMicroversion') ? undefined : BTBillOfMaterialsObjectWithPropertiesInfoFromJSON(json['documentMicroversion']),
        'element': !exists(json, 'element') ? undefined : BTBillOfMaterialsElementInfoFromJSON(json['element']),
        'href': !exists(json, 'href') ? undefined : json['href'],
        'thumbnailInfo': !exists(json, 'thumbnailInfo') ? undefined : BTThumbnailInfoFromJSON(json['thumbnailInfo']),
        'version': !exists(json, 'version') ? undefined : BTBillOfMaterialsObjectWithPropertiesInfoFromJSON(json['version']),
        'viewHref': !exists(json, 'viewHref') ? undefined : json['viewHref'],
        'workspace': !exists(json, 'workspace') ? undefined : BTBillOfMaterialsObjectWithPropertiesInfoFromJSON(json['workspace']),
    };
}

export function BTBillOfMaterialsSourceInfoToJSON(value?: BTBillOfMaterialsSourceInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'document': BTBillOfMaterialsObjectWithPropertiesInfoToJSON(value.document),
        'documentMicroversion': BTBillOfMaterialsObjectWithPropertiesInfoToJSON(value.documentMicroversion),
        'element': BTBillOfMaterialsElementInfoToJSON(value.element),
        'href': value.href,
        'thumbnailInfo': BTThumbnailInfoToJSON(value.thumbnailInfo),
        'version': BTBillOfMaterialsObjectWithPropertiesInfoToJSON(value.version),
        'viewHref': value.viewHref,
        'workspace': BTBillOfMaterialsObjectWithPropertiesInfoToJSON(value.workspace),
    };
}

