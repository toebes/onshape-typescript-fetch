/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTCompanySummaryInfo } from './BTCompanySummaryInfo';
import {
    BTCompanySummaryInfoFromJSON,
    BTCompanySummaryInfoFromJSONTyped,
    BTCompanySummaryInfoToJSON,
} from './BTCompanySummaryInfo';
import type { BTUserSummaryInfo } from './BTUserSummaryInfo';
import {
    BTUserSummaryInfoFromJSON,
    BTUserSummaryInfoFromJSONTyped,
    BTUserSummaryInfoToJSON,
 BTUserSummaryInfoSuperToJSON,
} from './BTUserSummaryInfo';
import type { GlobalPermissionInfo } from './GlobalPermissionInfo';
import {
    GlobalPermissionInfoFromJSON,
    GlobalPermissionInfoFromJSONTyped,
    GlobalPermissionInfoToJSON,
} from './GlobalPermissionInfo';

import {
     BTCompanyUserSummaryInfoFromJSONTyped,
    BTCompanyUserSummaryInfoToJSON,
     BTCompanyUserSummaryAdminInfoFromJSONTyped,
    BTCompanyUserSummaryAdminInfoToJSON
} from './';

/**
 * 
 * @export
 * @interface BTCompanyUserSummaryInfo
 */
export interface BTCompanyUserSummaryInfo extends BTUserSummaryInfo {
    /**
     * 
     * @type {boolean}
     * @memberof BTCompanyUserSummaryInfo
     */
    admin?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTCompanyUserSummaryInfo
     */
    cls?: string;
}

/**
 * Check if a given object implements the BTCompanyUserSummaryInfo interface.
 */
export function instanceOfBTCompanyUserSummaryInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTCompanyUserSummaryInfoFromJSON(json: any): BTCompanyUserSummaryInfo {
    return BTCompanyUserSummaryInfoFromJSONTyped(json, false);
}

export function BTCompanyUserSummaryInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTCompanyUserSummaryInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['jsonType'] === 'companyuser') {
            return BTCompanyUserSummaryInfoFromJSONTyped(json, true);
        }
        if (json['jsonType'] === 'companyuseradmin') {
            return BTCompanyUserSummaryAdminInfoFromJSONTyped(json, true);
        }
    }
    return {
        ...BTUserSummaryInfoFromJSONTyped(json, ignoreDiscriminator),
        'admin': !exists(json, 'admin') ? undefined : json['admin'],
        'cls': !exists(json, 'cls') ? undefined : json['cls'],
    };
}

export function BTCompanyUserSummaryInfoSuperToJSON(value?: BTCompanyUserSummaryInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...BTUserSummaryInfoSuperToJSON(value),
        'admin': value.admin,
        'cls': value.cls,
    };
}



export function BTCompanyUserSummaryInfoToJSON(value?: BTCompanyUserSummaryInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (value.jsonType === 'companyuser') {
        return BTCompanyUserSummaryInfoToJSON(value);
    }
    if (value.jsonType === 'companyuseradmin') {
        return BTCompanyUserSummaryAdminInfoToJSON(value);
    }
    return BTCompanyUserSummaryInfoSuperToJSON(value);
}
