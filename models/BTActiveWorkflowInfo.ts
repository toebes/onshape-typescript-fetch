/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTPublishedWorkflowInfo } from './BTPublishedWorkflowInfo';
import {
    BTPublishedWorkflowInfoFromJSON,
    BTPublishedWorkflowInfoFromJSONTyped,
    BTPublishedWorkflowInfoToJSON,
} from './BTPublishedWorkflowInfo';

/**
 * 
 * @export
 * @interface BTActiveWorkflowInfo
 */
export interface BTActiveWorkflowInfo {
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    allowReleaseItemsFromOtherDocuments?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserCreateReleases?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserEditStandardContent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserManageWorkflows?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserSeeArenaItemLink?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserSyncBomToArena?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserSyncRevisionsToArena?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserSyncStandardContentToArena?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    canCurrentUserSyncToArena?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTActiveWorkflowInfo
     */
    companyId?: string;
    /**
     * 
     * @type {string}
     * @memberof BTActiveWorkflowInfo
     */
    documentId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    drawingCanDuplicatePartNumber?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    enabledActiveMultipleWorkflows?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    hasInactiveCustomWorkflows?: boolean;
    /**
     * 
     * @type {BTPublishedWorkflowInfo}
     * @memberof BTActiveWorkflowInfo
     */
    obsoletionWorkflow?: BTPublishedWorkflowInfo;
    /**
     * 
     * @type {string}
     * @memberof BTActiveWorkflowInfo
     */
    obsoletionWorkflowId?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof BTActiveWorkflowInfo
     */
    osCategoryIdToArenaNumberFormatId?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof BTActiveWorkflowInfo
     */
    partNumberingSchemeId?: string;
    /**
     * 
     * @type {Array<BTPublishedWorkflowInfo>}
     * @memberof BTActiveWorkflowInfo
     */
    pickableWorkflows?: Array<BTPublishedWorkflowInfo>;
    /**
     * 
     * @type {BTPublishedWorkflowInfo}
     * @memberof BTActiveWorkflowInfo
     */
    releaseWorkflow?: BTPublishedWorkflowInfo;
    /**
     * 
     * @type {string}
     * @memberof BTActiveWorkflowInfo
     */
    releaseWorkflowId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BTActiveWorkflowInfo
     */
    releaseableApplications?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof BTActiveWorkflowInfo
     */
    standardContentNumberingSchemeId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    standardContentUsingAutoNumbering?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    standardContentUsingThirdPartyPartNumbering?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    usingAutoPartNumbering?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    usingManagedWorkflow?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTActiveWorkflowInfo
     */
    usingThirdPartyPartNumbering?: boolean;
}

/**
 * Check if a given object implements the BTActiveWorkflowInfo interface.
 */
export function instanceOfBTActiveWorkflowInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTActiveWorkflowInfoFromJSON(json: any): BTActiveWorkflowInfo {
    return BTActiveWorkflowInfoFromJSONTyped(json, false);
}

export function BTActiveWorkflowInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTActiveWorkflowInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allowReleaseItemsFromOtherDocuments': !exists(json, 'allowReleaseItemsFromOtherDocuments') ? undefined : json['allowReleaseItemsFromOtherDocuments'],
        'canCurrentUserCreateReleases': !exists(json, 'canCurrentUserCreateReleases') ? undefined : json['canCurrentUserCreateReleases'],
        'canCurrentUserEditStandardContent': !exists(json, 'canCurrentUserEditStandardContent') ? undefined : json['canCurrentUserEditStandardContent'],
        'canCurrentUserManageWorkflows': !exists(json, 'canCurrentUserManageWorkflows') ? undefined : json['canCurrentUserManageWorkflows'],
        'canCurrentUserSeeArenaItemLink': !exists(json, 'canCurrentUserSeeArenaItemLink') ? undefined : json['canCurrentUserSeeArenaItemLink'],
        'canCurrentUserSyncBomToArena': !exists(json, 'canCurrentUserSyncBomToArena') ? undefined : json['canCurrentUserSyncBomToArena'],
        'canCurrentUserSyncRevisionsToArena': !exists(json, 'canCurrentUserSyncRevisionsToArena') ? undefined : json['canCurrentUserSyncRevisionsToArena'],
        'canCurrentUserSyncStandardContentToArena': !exists(json, 'canCurrentUserSyncStandardContentToArena') ? undefined : json['canCurrentUserSyncStandardContentToArena'],
        'canCurrentUserSyncToArena': !exists(json, 'canCurrentUserSyncToArena') ? undefined : json['canCurrentUserSyncToArena'],
        'companyId': !exists(json, 'companyId') ? undefined : json['companyId'],
        'documentId': !exists(json, 'documentId') ? undefined : json['documentId'],
        'drawingCanDuplicatePartNumber': !exists(json, 'drawingCanDuplicatePartNumber') ? undefined : json['drawingCanDuplicatePartNumber'],
        'enabledActiveMultipleWorkflows': !exists(json, 'enabledActiveMultipleWorkflows') ? undefined : json['enabledActiveMultipleWorkflows'],
        'hasInactiveCustomWorkflows': !exists(json, 'hasInactiveCustomWorkflows') ? undefined : json['hasInactiveCustomWorkflows'],
        'obsoletionWorkflow': !exists(json, 'obsoletionWorkflow') ? undefined : BTPublishedWorkflowInfoFromJSON(json['obsoletionWorkflow']),
        'obsoletionWorkflowId': !exists(json, 'obsoletionWorkflowId') ? undefined : json['obsoletionWorkflowId'],
        'osCategoryIdToArenaNumberFormatId': !exists(json, 'osCategoryIdToArenaNumberFormatId') ? undefined : json['osCategoryIdToArenaNumberFormatId'],
        'partNumberingSchemeId': !exists(json, 'partNumberingSchemeId') ? undefined : json['partNumberingSchemeId'],
        'pickableWorkflows': !exists(json, 'pickableWorkflows') ? undefined : ((json['pickableWorkflows'] as Array<any>).map(BTPublishedWorkflowInfoFromJSON)),
        'releaseWorkflow': !exists(json, 'releaseWorkflow') ? undefined : BTPublishedWorkflowInfoFromJSON(json['releaseWorkflow']),
        'releaseWorkflowId': !exists(json, 'releaseWorkflowId') ? undefined : json['releaseWorkflowId'],
        'releaseableApplications': !exists(json, 'releaseableApplications') ? undefined : json['releaseableApplications'],
        'standardContentNumberingSchemeId': !exists(json, 'standardContentNumberingSchemeId') ? undefined : json['standardContentNumberingSchemeId'],
        'standardContentUsingAutoNumbering': !exists(json, 'standardContentUsingAutoNumbering') ? undefined : json['standardContentUsingAutoNumbering'],
        'standardContentUsingThirdPartyPartNumbering': !exists(json, 'standardContentUsingThirdPartyPartNumbering') ? undefined : json['standardContentUsingThirdPartyPartNumbering'],
        'usingAutoPartNumbering': !exists(json, 'usingAutoPartNumbering') ? undefined : json['usingAutoPartNumbering'],
        'usingManagedWorkflow': !exists(json, 'usingManagedWorkflow') ? undefined : json['usingManagedWorkflow'],
        'usingThirdPartyPartNumbering': !exists(json, 'usingThirdPartyPartNumbering') ? undefined : json['usingThirdPartyPartNumbering'],
    };
}

export function BTActiveWorkflowInfoToJSON(value?: BTActiveWorkflowInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allowReleaseItemsFromOtherDocuments': value.allowReleaseItemsFromOtherDocuments,
        'canCurrentUserCreateReleases': value.canCurrentUserCreateReleases,
        'canCurrentUserEditStandardContent': value.canCurrentUserEditStandardContent,
        'canCurrentUserManageWorkflows': value.canCurrentUserManageWorkflows,
        'canCurrentUserSeeArenaItemLink': value.canCurrentUserSeeArenaItemLink,
        'canCurrentUserSyncBomToArena': value.canCurrentUserSyncBomToArena,
        'canCurrentUserSyncRevisionsToArena': value.canCurrentUserSyncRevisionsToArena,
        'canCurrentUserSyncStandardContentToArena': value.canCurrentUserSyncStandardContentToArena,
        'canCurrentUserSyncToArena': value.canCurrentUserSyncToArena,
        'companyId': value.companyId,
        'documentId': value.documentId,
        'drawingCanDuplicatePartNumber': value.drawingCanDuplicatePartNumber,
        'enabledActiveMultipleWorkflows': value.enabledActiveMultipleWorkflows,
        'hasInactiveCustomWorkflows': value.hasInactiveCustomWorkflows,
        'obsoletionWorkflow': BTPublishedWorkflowInfoToJSON(value.obsoletionWorkflow),
        'obsoletionWorkflowId': value.obsoletionWorkflowId,
        'osCategoryIdToArenaNumberFormatId': value.osCategoryIdToArenaNumberFormatId,
        'partNumberingSchemeId': value.partNumberingSchemeId,
        'pickableWorkflows': value.pickableWorkflows === undefined ? undefined : ((value.pickableWorkflows as Array<any>).map(BTPublishedWorkflowInfoToJSON)),
        'releaseWorkflow': BTPublishedWorkflowInfoToJSON(value.releaseWorkflow),
        'releaseWorkflowId': value.releaseWorkflowId,
        'releaseableApplications': value.releaseableApplications,
        'standardContentNumberingSchemeId': value.standardContentNumberingSchemeId,
        'standardContentUsingAutoNumbering': value.standardContentUsingAutoNumbering,
        'standardContentUsingThirdPartyPartNumbering': value.standardContentUsingThirdPartyPartNumbering,
        'usingAutoPartNumbering': value.usingAutoPartNumbering,
        'usingManagedWorkflow': value.usingManagedWorkflow,
        'usingThirdPartyPartNumbering': value.usingThirdPartyPartNumbering,
    };
}

