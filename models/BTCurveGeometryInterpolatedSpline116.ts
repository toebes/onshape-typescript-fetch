/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.181.37085-cf05a13421a3
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTCurveGeometry114 } from './BTCurveGeometry114';
import {
    BTCurveGeometry114FromJSON,
    BTCurveGeometry114FromJSONTyped,
    BTCurveGeometry114ToJSON,
 BTCurveGeometry114SuperToJSON,
 BTCurveGeometry114SuperSuperToJSON,
} from './BTCurveGeometry114';

/**
 * 
 * @export
 * @interface BTCurveGeometryInterpolatedSpline116
 */
export interface BTCurveGeometryInterpolatedSpline116 extends BTCurveGeometry114 {
    /**
     * Type of JSON object.
     * @type {string}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    btType?: string;
    /**
     * 
     * @type {{ [key: string]: Array<number>; }}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    derivatives?: { [key: string]: Array<number>; };
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    endDerivativeX?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    endDerivativeY?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    endHandleX?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    endHandleY?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    interpolationPoints?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    isPeriodic?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    startDerivativeX?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    startDerivativeY?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    startHandleX?: number;
    /**
     * 
     * @type {number}
     * @memberof BTCurveGeometryInterpolatedSpline116
     */
    startHandleY?: number;
}

/**
 * Check if a given object implements the BTCurveGeometryInterpolatedSpline116 interface.
 */
export function instanceOfBTCurveGeometryInterpolatedSpline116(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTCurveGeometryInterpolatedSpline116FromJSON(json: any): BTCurveGeometryInterpolatedSpline116 {
    return BTCurveGeometryInterpolatedSpline116FromJSONTyped(json, false);
}

export function BTCurveGeometryInterpolatedSpline116FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTCurveGeometryInterpolatedSpline116 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...BTCurveGeometry114FromJSONTyped(json, ignoreDiscriminator),
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'derivatives': !exists(json, 'derivatives') ? undefined : json['derivatives'],
        'endDerivativeX': !exists(json, 'endDerivativeX') ? undefined : json['endDerivativeX'],
        'endDerivativeY': !exists(json, 'endDerivativeY') ? undefined : json['endDerivativeY'],
        'endHandleX': !exists(json, 'endHandleX') ? undefined : json['endHandleX'],
        'endHandleY': !exists(json, 'endHandleY') ? undefined : json['endHandleY'],
        'interpolationPoints': !exists(json, 'interpolationPoints') ? undefined : json['interpolationPoints'],
        'isPeriodic': !exists(json, 'isPeriodic') ? undefined : json['isPeriodic'],
        'startDerivativeX': !exists(json, 'startDerivativeX') ? undefined : json['startDerivativeX'],
        'startDerivativeY': !exists(json, 'startDerivativeY') ? undefined : json['startDerivativeY'],
        'startHandleX': !exists(json, 'startHandleX') ? undefined : json['startHandleX'],
        'startHandleY': !exists(json, 'startHandleY') ? undefined : json['startHandleY'],
    };
}

export function BTCurveGeometryInterpolatedSpline116ToJSON(value?: BTCurveGeometryInterpolatedSpline116 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...BTCurveGeometry114SuperSuperToJSON(value),
        'btType': value.btType,
        'derivatives': value.derivatives,
        'endDerivativeX': value.endDerivativeX,
        'endDerivativeY': value.endDerivativeY,
        'endHandleX': value.endHandleX,
        'endHandleY': value.endHandleY,
        'interpolationPoints': value.interpolationPoints,
        'isPeriodic': value.isPeriodic,
        'startDerivativeX': value.startDerivativeX,
        'startDerivativeY': value.startDerivativeY,
        'startHandleX': value.startHandleX,
        'startHandleY': value.startHandleY,
    };
}

