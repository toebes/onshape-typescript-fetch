/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTCategoryPropertyConfigInfo } from './BTCategoryPropertyConfigInfo';
import {
    BTCategoryPropertyConfigInfoFromJSON,
    BTCategoryPropertyConfigInfoFromJSONTyped,
    BTCategoryPropertyConfigInfoToJSON,
} from './BTCategoryPropertyConfigInfo';
import type { BTMetadataCategorySummaryInfo } from './BTMetadataCategorySummaryInfo';
import {
    BTMetadataCategorySummaryInfoFromJSON,
    BTMetadataCategorySummaryInfoFromJSONTyped,
    BTMetadataCategorySummaryInfoToJSON,
} from './BTMetadataCategorySummaryInfo';

/**
 * 
 * @export
 * @interface BTCategoryPropertyInfo
 */
export interface BTCategoryPropertyInfo {
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyInfo
     */
    array?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyInfo
     */
    assignable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    blobMimeType?: string;
    /**
     * 
     * @type {BTCategoryPropertyConfigInfo}
     * @memberof BTCategoryPropertyInfo
     */
    categoryPropertyConfigInfo?: BTCategoryPropertyConfigInfo;
    /**
     * 
     * @type {Array<BTMetadataCategorySummaryInfo>}
     * @memberof BTCategoryPropertyInfo
     */
    categorySummaryInfoList?: Array<BTMetadataCategorySummaryInfo>;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyInfo
     */
    editableInMicroversion?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyInfo
     */
    editableInVersion?: boolean;
    /**
     * URI to fetch complete information of the resource.
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    href?: string;
    /**
     * Id of the resource.
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    id?: string;
    /**
     * Name of the resource.
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    objectDefName?: string;
    /**
     * 
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    ownerId?: string;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyInfo
     */
    ownerType?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyInfo
     */
    uiReadonlyInMicroversion?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTCategoryPropertyInfo
     */
    uiReadonlyInVersion?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BTCategoryPropertyInfo
     */
    valueType?: number;
    /**
     * URI to visualize the resource in a webclient if applicable.
     * @type {string}
     * @memberof BTCategoryPropertyInfo
     */
    viewRef?: string;
}

/**
 * Check if a given object implements the BTCategoryPropertyInfo interface.
 */
export function instanceOfBTCategoryPropertyInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTCategoryPropertyInfoFromJSON(json: any): BTCategoryPropertyInfo {
    return BTCategoryPropertyInfoFromJSONTyped(json, false);
}

export function BTCategoryPropertyInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTCategoryPropertyInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'array': !exists(json, 'array') ? undefined : json['array'],
        'assignable': !exists(json, 'assignable') ? undefined : json['assignable'],
        'blobMimeType': !exists(json, 'blobMimeType') ? undefined : json['blobMimeType'],
        'categoryPropertyConfigInfo': !exists(json, 'categoryPropertyConfigInfo') ? undefined : BTCategoryPropertyConfigInfoFromJSON(json['categoryPropertyConfigInfo']),
        'categorySummaryInfoList': !exists(json, 'categorySummaryInfoList') ? undefined : ((json['categorySummaryInfoList'] as Array<any>).map(BTMetadataCategorySummaryInfoFromJSON)),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'editableInMicroversion': !exists(json, 'editableInMicroversion') ? undefined : json['editableInMicroversion'],
        'editableInVersion': !exists(json, 'editableInVersion') ? undefined : json['editableInVersion'],
        'href': !exists(json, 'href') ? undefined : json['href'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'objectDefName': !exists(json, 'objectDefName') ? undefined : json['objectDefName'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'ownerType': !exists(json, 'ownerType') ? undefined : json['ownerType'],
        'uiReadonlyInMicroversion': !exists(json, 'uiReadonlyInMicroversion') ? undefined : json['uiReadonlyInMicroversion'],
        'uiReadonlyInVersion': !exists(json, 'uiReadonlyInVersion') ? undefined : json['uiReadonlyInVersion'],
        'valueType': !exists(json, 'valueType') ? undefined : json['valueType'],
        'viewRef': !exists(json, 'viewRef') ? undefined : json['viewRef'],
    };
}

export function BTCategoryPropertyInfoToJSON(value?: BTCategoryPropertyInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'array': value.array,
        'assignable': value.assignable,
        'blobMimeType': value.blobMimeType,
        'categoryPropertyConfigInfo': BTCategoryPropertyConfigInfoToJSON(value.categoryPropertyConfigInfo),
        'categorySummaryInfoList': value.categorySummaryInfoList === undefined ? undefined : ((value.categorySummaryInfoList as Array<any>).map(BTMetadataCategorySummaryInfoToJSON)),
        'description': value.description,
        'editableInMicroversion': value.editableInMicroversion,
        'editableInVersion': value.editableInVersion,
        'href': value.href,
        'id': value.id,
        'name': value.name,
        'objectDefName': value.objectDefName,
        'ownerId': value.ownerId,
        'ownerType': value.ownerType,
        'uiReadonlyInMicroversion': value.uiReadonlyInMicroversion,
        'uiReadonlyInVersion': value.uiReadonlyInVersion,
        'valueType': value.valueType,
        'viewRef': value.viewRef,
    };
}

