/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.196.54436-927372740f35
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BTWebClientCapabilitiesParams
 */
export interface BTWebClientCapabilitiesParams {
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    angleInstancedArrays?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BTWebClientCapabilitiesParams
     */
    clientBrowserStorageQuota?: number;
    /**
     * 
     * @type {number}
     * @memberof BTWebClientCapabilitiesParams
     */
    clientBrowserStorageUsed?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    compressedTextureS3tc?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    depthTexture?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BTWebClientCapabilitiesParams
     */
    devicePixelRatio?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    drawBuffers?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    extTextureFilterAnisotropic?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    has3dMouse?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    oesElementIndexUint?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    oesStandardDerivatives?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    oesTextureFloat?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    oesTextureFloatLinear?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    oesTextureHalfFloat?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    oesTextureHalfFloatLinear?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    oesVertexArrayObject?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTWebClientCapabilitiesParams
     */
    renderer?: string;
    /**
     * 
     * @type {number}
     * @memberof BTWebClientCapabilitiesParams
     */
    screenHeight?: number;
    /**
     * 
     * @type {number}
     * @memberof BTWebClientCapabilitiesParams
     */
    screenWidth?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    supportsWebGL2?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTWebClientCapabilitiesParams
     */
    supportsWebGPU?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTWebClientCapabilitiesParams
     */
    vendor?: string;
}

/**
 * Check if a given object implements the BTWebClientCapabilitiesParams interface.
 */
export function instanceOfBTWebClientCapabilitiesParams(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTWebClientCapabilitiesParamsFromJSON(json: any): BTWebClientCapabilitiesParams {
    return BTWebClientCapabilitiesParamsFromJSONTyped(json, false);
}

export function BTWebClientCapabilitiesParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BTWebClientCapabilitiesParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'angleInstancedArrays': !exists(json, 'angleInstancedArrays') ? undefined : json['angleInstancedArrays'],
        'clientBrowserStorageQuota': !exists(json, 'clientBrowserStorageQuota') ? undefined : json['clientBrowserStorageQuota'],
        'clientBrowserStorageUsed': !exists(json, 'clientBrowserStorageUsed') ? undefined : json['clientBrowserStorageUsed'],
        'compressedTextureS3tc': !exists(json, 'compressedTextureS3tc') ? undefined : json['compressedTextureS3tc'],
        'depthTexture': !exists(json, 'depthTexture') ? undefined : json['depthTexture'],
        'devicePixelRatio': !exists(json, 'devicePixelRatio') ? undefined : json['devicePixelRatio'],
        'drawBuffers': !exists(json, 'drawBuffers') ? undefined : json['drawBuffers'],
        'extTextureFilterAnisotropic': !exists(json, 'extTextureFilterAnisotropic') ? undefined : json['extTextureFilterAnisotropic'],
        'has3dMouse': !exists(json, 'has3dMouse') ? undefined : json['has3dMouse'],
        'oesElementIndexUint': !exists(json, 'oesElementIndexUint') ? undefined : json['oesElementIndexUint'],
        'oesStandardDerivatives': !exists(json, 'oesStandardDerivatives') ? undefined : json['oesStandardDerivatives'],
        'oesTextureFloat': !exists(json, 'oesTextureFloat') ? undefined : json['oesTextureFloat'],
        'oesTextureFloatLinear': !exists(json, 'oesTextureFloatLinear') ? undefined : json['oesTextureFloatLinear'],
        'oesTextureHalfFloat': !exists(json, 'oesTextureHalfFloat') ? undefined : json['oesTextureHalfFloat'],
        'oesTextureHalfFloatLinear': !exists(json, 'oesTextureHalfFloatLinear') ? undefined : json['oesTextureHalfFloatLinear'],
        'oesVertexArrayObject': !exists(json, 'oesVertexArrayObject') ? undefined : json['oesVertexArrayObject'],
        'renderer': !exists(json, 'renderer') ? undefined : json['renderer'],
        'screenHeight': !exists(json, 'screenHeight') ? undefined : json['screenHeight'],
        'screenWidth': !exists(json, 'screenWidth') ? undefined : json['screenWidth'],
        'supportsWebGL2': !exists(json, 'supportsWebGL2') ? undefined : json['supportsWebGL2'],
        'supportsWebGPU': !exists(json, 'supportsWebGPU') ? undefined : json['supportsWebGPU'],
        'vendor': !exists(json, 'vendor') ? undefined : json['vendor'],
    };
}

export function BTWebClientCapabilitiesParamsToJSON(value?: BTWebClientCapabilitiesParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'angleInstancedArrays': value.angleInstancedArrays,
        'clientBrowserStorageQuota': value.clientBrowserStorageQuota,
        'clientBrowserStorageUsed': value.clientBrowserStorageUsed,
        'compressedTextureS3tc': value.compressedTextureS3tc,
        'depthTexture': value.depthTexture,
        'devicePixelRatio': value.devicePixelRatio,
        'drawBuffers': value.drawBuffers,
        'extTextureFilterAnisotropic': value.extTextureFilterAnisotropic,
        'has3dMouse': value.has3dMouse,
        'oesElementIndexUint': value.oesElementIndexUint,
        'oesStandardDerivatives': value.oesStandardDerivatives,
        'oesTextureFloat': value.oesTextureFloat,
        'oesTextureFloatLinear': value.oesTextureFloatLinear,
        'oesTextureHalfFloat': value.oesTextureHalfFloat,
        'oesTextureHalfFloatLinear': value.oesTextureHalfFloatLinear,
        'oesVertexArrayObject': value.oesVertexArrayObject,
        'renderer': value.renderer,
        'screenHeight': value.screenHeight,
        'screenWidth': value.screenWidth,
        'supportsWebGL2': value.supportsWebGL2,
        'supportsWebGPU': value.supportsWebGPU,
        'vendor': value.vendor,
    };
}

